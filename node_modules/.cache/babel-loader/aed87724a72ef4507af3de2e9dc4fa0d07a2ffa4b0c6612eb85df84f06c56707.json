{"ast":null,"code":"/**\n * Comprehensive data fetcher for all frontend pages using smsdb\n * This service provides unified data fetching with fallback mechanisms\n */\n\nimport axios from 'axios';\n\n// API Configuration\nconst API_BASE = 'http://localhost:5000/api';\nconst PUBLIC_API_BASE = 'http://localhost:5000/api/public';\nconst PHP_FALLBACK_BASE = '/sms-spi/sms-spi/api';\nclass SMSDBDataFetcher {\n  constructor() {\n    this.isBackendOnline = false;\n    this.checkBackendStatus();\n  }\n\n  // Check if backend server is running\n  async checkBackendStatus() {\n    try {\n      const response = await axios.get(`${API_BASE}/dashboard/stats`, {\n        timeout: 3000\n      });\n      this.isBackendOnline = response.status === 200;\n      console.log('‚úÖ Backend server is online');\n      return true;\n    } catch (error) {\n      this.isBackendOnline = false;\n      console.log('‚ùå Backend server is offline, using fallback methods');\n      return false;\n    }\n  }\n\n  // Generic API call with triple fallback\n  async fetchData(endpoint, options = {}) {\n    const {\n      useAuth = false,\n      params = {},\n      fallbackData = null\n    } = options;\n\n    // Build query string\n    const queryString = new URLSearchParams(params).toString();\n    const fullEndpoint = queryString ? `${endpoint}?${queryString}` : endpoint;\n\n    // Method 1: Try authenticated endpoint\n    if (useAuth) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_BASE}${fullEndpoint}`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          },\n          timeout: 5000\n        });\n        if (response.data) {\n          console.log(`‚úÖ Auth API success: ${endpoint}`);\n          return this.normalizeResponse(response.data);\n        }\n      } catch (error) {\n        console.log(`‚ö†Ô∏è Auth API failed: ${endpoint}`, error.message);\n      }\n    }\n\n    // Method 2: Try public endpoint\n    try {\n      const response = await axios.get(`${PUBLIC_API_BASE}${fullEndpoint}`, {\n        timeout: 5000\n      });\n      if (response.data) {\n        console.log(`‚úÖ Public API success: ${endpoint}`);\n        return this.normalizeResponse(response.data);\n      }\n    } catch (error) {\n      console.log(`‚ö†Ô∏è Public API failed: ${endpoint}`, error.message);\n    }\n\n    // Method 3: Try PHP fallback\n    try {\n      const phpEndpoint = `${PHP_FALLBACK_BASE}${endpoint}/public.php${queryString ? `?${queryString}` : ''}`;\n      const response = await axios.get(phpEndpoint, {\n        timeout: 5000\n      });\n      if (response.data) {\n        console.log(`‚úÖ PHP fallback success: ${endpoint}`);\n        return this.normalizeResponse(response.data);\n      }\n    } catch (error) {\n      console.log(`‚ö†Ô∏è PHP fallback failed: ${endpoint}`, error.message);\n    }\n\n    // Method 4: Return fallback data or mock data\n    if (fallbackData) {\n      console.log(`üìã Using fallback data for: ${endpoint}`);\n      return {\n        success: true,\n        rows: fallbackData,\n        count: fallbackData.length,\n        _isMockData: true\n      };\n    }\n    throw new Error(`All data fetching methods failed for ${endpoint}`);\n  }\n\n  // Normalize different response formats\n  normalizeResponse(data) {\n    if (data.success !== undefined) {\n      return data; // Already in correct format\n    }\n    if (Array.isArray(data)) {\n      return {\n        success: true,\n        rows: data,\n        count: data.length\n      };\n    }\n    if (data.data) {\n      return {\n        success: true,\n        rows: data.data,\n        count: data.data.length || 1\n      };\n    }\n    return {\n      success: true,\n      rows: [data],\n      count: 1\n    };\n  }\n\n  // Dashboard Data\n  async getDashboardStats() {\n    const fallbackStats = {\n      students: {\n        total: 8,\n        active: 8,\n        inactive: 0\n      },\n      teachers: {\n        total: 7,\n        active: 7\n      },\n      departments: {\n        total: 6\n      },\n      programs: {\n        total: 8\n      },\n      batches: {\n        total: 8\n      },\n      courses: {\n        total: 14\n      }\n    };\n    return await this.fetchData('/dashboard/stats', {\n      useAuth: true,\n      fallbackData: [fallbackStats]\n    });\n  }\n\n  // Departments Data\n  async getDepartments(page = 1, limit = 10, search = '') {\n    const fallbackDepts = [{\n      id: 1,\n      department_name: 'Computer Science',\n      teacher_id: 1,\n      name: 'Computer Science'\n    }, {\n      id: 2,\n      department_name: 'Business Administration',\n      teacher_id: 2,\n      name: 'Business Administration'\n    }, {\n      id: 3,\n      department_name: 'Engineering',\n      teacher_id: 5,\n      name: 'Engineering'\n    }, {\n      id: 4,\n      department_name: 'Mathematics',\n      teacher_id: 4,\n      name: 'Mathematics'\n    }, {\n      id: 5,\n      department_name: 'English Literature',\n      teacher_id: 6,\n      name: 'English Literature'\n    }];\n    return await this.fetchData('/departments', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackDepts\n    });\n  }\n\n  // Programs Data\n  async getPrograms(page = 1, limit = 10, search = '') {\n    const fallbackPrograms = [{\n      id: 1,\n      program_name: 'Computer Science Program',\n      department_id: 1,\n      degree_level_id: 1\n    }, {\n      id: 2,\n      program_name: 'Business Administration Program',\n      department_id: 2,\n      degree_level_id: 1\n    }, {\n      id: 3,\n      program_name: 'Software Engineering Program',\n      department_id: 1,\n      degree_level_id: 1\n    }, {\n      id: 4,\n      program_name: 'Information Technology Program',\n      department_id: 1,\n      degree_level_id: 2\n    }];\n    return await this.fetchData('/programs', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackPrograms\n    });\n  }\n\n  // Majors Data\n  async getMajors(page = 1, limit = 10, search = '') {\n    const fallbackMajors = [{\n      id: 1,\n      major_name: 'Software Development',\n      department_id: 1,\n      description: 'Focus on programming and software design'\n    }, {\n      id: 2,\n      major_name: 'Database Systems',\n      department_id: 1,\n      description: 'Specialization in database design and management'\n    }, {\n      id: 3,\n      major_name: 'Business Management',\n      department_id: 2,\n      description: 'General business management and leadership'\n    }, {\n      id: 4,\n      major_name: 'Marketing',\n      department_id: 2,\n      description: 'Marketing strategies and consumer behavior'\n    }];\n    return await this.fetchData('/majors', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackMajors\n    });\n  }\n\n  // Students Data\n  async getStudents(page = 1, limit = 10, search = '') {\n    const fallbackStudents = [{\n      id: 1,\n      student_code: 'S2024001',\n      name: 'Alice',\n      surname: 'Johnson',\n      email: 'alice.johnson@student.sms.edu',\n      batch_id: 1,\n      major_id: 1\n    }, {\n      id: 2,\n      student_code: 'S2024002',\n      name: 'Bob',\n      surname: 'Wilson',\n      email: 'bob.wilson@student.sms.edu',\n      batch_id: 1,\n      major_id: 1\n    }, {\n      id: 3,\n      student_code: 'S2024003',\n      name: 'Carol',\n      surname: 'Brown',\n      email: 'carol.brown@student.sms.edu',\n      batch_id: 2,\n      major_id: 2\n    }, {\n      id: 4,\n      student_code: 'S2024004',\n      name: 'David',\n      surname: 'Miller',\n      email: 'david.miller@student.sms.edu',\n      batch_id: 3,\n      major_id: 3\n    }];\n    return await this.fetchData('/students', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackStudents\n    });\n  }\n\n  // Teachers Data\n  async getTeachers(page = 1, limit = 10, search = '') {\n    const fallbackTeachers = [{\n      id: 1,\n      teacher_code: 'T001',\n      first_name: 'John',\n      last_name: 'Doe',\n      email: 'john.doe@sms.edu',\n      department_id: 1\n    }, {\n      id: 2,\n      teacher_code: 'T002',\n      first_name: 'Jane',\n      last_name: 'Smith',\n      email: 'jane.smith@sms.edu',\n      department_id: 2\n    }, {\n      id: 3,\n      teacher_code: 'T003',\n      first_name: 'Michael',\n      last_name: 'Johnson',\n      email: 'michael.johnson@sms.edu',\n      department_id: 1\n    }, {\n      id: 4,\n      teacher_code: 'T004',\n      first_name: 'Sarah',\n      last_name: 'Davis',\n      email: 'sarah.davis@sms.edu',\n      department_id: 4\n    }];\n    return await this.fetchData('/teachers', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackTeachers\n    });\n  }\n\n  // Courses Data\n  async getCourses(page = 1, limit = 10, search = '') {\n    const fallbackCourses = [{\n      id: 1,\n      course_code: 'CS101',\n      course_name: 'Introduction to Programming',\n      credits: 3,\n      department_id: 1\n    }, {\n      id: 2,\n      course_code: 'CS201',\n      course_name: 'Data Structures',\n      credits: 4,\n      department_id: 1\n    }, {\n      id: 3,\n      course_code: 'CS301',\n      course_name: 'Database Systems',\n      credits: 3,\n      department_id: 1\n    }, {\n      id: 4,\n      course_code: 'BA101',\n      course_name: 'Business Fundamentals',\n      credits: 3,\n      department_id: 2\n    }];\n    return await this.fetchData('/courses', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackCourses\n    });\n  }\n\n  // Batches Data\n  async getBatches(page = 1, limit = 10, search = '') {\n    const fallbackBatches = [{\n      id: 1,\n      name: 'CS-2024-A',\n      code: 'CS24A',\n      program_id: 1,\n      academic_year_id: 1,\n      capacity: 30\n    }, {\n      id: 2,\n      name: 'CS-2024-B',\n      code: 'CS24B',\n      program_id: 1,\n      academic_year_id: 1,\n      capacity: 30\n    }, {\n      id: 3,\n      name: 'BA-2024-A',\n      code: 'BA24A',\n      program_id: 2,\n      academic_year_id: 1,\n      capacity: 25\n    }, {\n      id: 4,\n      name: 'SE-2024-A',\n      code: 'SE24A',\n      program_id: 3,\n      academic_year_id: 1,\n      capacity: 25\n    }];\n    return await this.fetchData('/batches', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackBatches\n    });\n  }\n\n  // Academic Years Data\n  async getAcademicYears(page = 1, limit = 10) {\n    const fallbackAcademicYears = [{\n      id: 1,\n      academic_year: '2024-2025',\n      start_date: '2024-09-01',\n      end_date: '2025-06-30',\n      is_current: 1\n    }, {\n      id: 2,\n      academic_year: '2023-2024',\n      start_date: '2023-09-01',\n      end_date: '2024-06-30',\n      is_current: 0\n    }, {\n      id: 3,\n      academic_year: '2025-2026',\n      start_date: '2025-09-01',\n      end_date: '2026-06-30',\n      is_current: 0\n    }];\n    return await this.fetchData('/academic-years', {\n      params: {\n        page,\n        limit\n      },\n      fallbackData: fallbackAcademicYears\n    });\n  }\n\n  // Degree Levels Data\n  async getDegreeLevels() {\n    const fallbackDegreeLevels = [{\n      id: 1,\n      degree_level_name: 'Bachelor Degree',\n      description: 'Undergraduate 4-year degree program'\n    }, {\n      id: 2,\n      degree_level_name: 'Associate Degree',\n      description: 'Undergraduate 2-year degree program'\n    }, {\n      id: 3,\n      degree_level_name: 'Master Degree',\n      description: 'Graduate 2-year degree program'\n    }];\n    return await this.fetchData('/degree-levels', {\n      fallbackData: fallbackDegreeLevels\n    });\n  }\n\n  // Subject Assignments Data\n  async getSubjectAssignments(page = 1, limit = 10, search = '') {\n    const fallbackSubjects = [{\n      id: 1,\n      teacher_id: 1,\n      course_id: 1,\n      academic_year_id: 1,\n      semester: 1,\n      batch_id: 1\n    }, {\n      id: 2,\n      teacher_id: 1,\n      course_id: 2,\n      academic_year_id: 1,\n      semester: 1,\n      batch_id: 1\n    }, {\n      id: 3,\n      teacher_id: 3,\n      course_id: 3,\n      academic_year_id: 1,\n      semester: 1,\n      batch_id: 2\n    }, {\n      id: 4,\n      teacher_id: 2,\n      course_id: 4,\n      academic_year_id: 1,\n      semester: 1,\n      batch_id: 3\n    }];\n    return await this.fetchData('/manage-subjects', {\n      params: {\n        page,\n        limit,\n        search\n      },\n      fallbackData: fallbackSubjects\n    });\n  }\n\n  // Grades Data\n  async getGrades(studentId = null, courseId = null, page = 1, limit = 10) {\n    const fallbackGrades = [{\n      id: 1,\n      student_id: 1,\n      course_id: 1,\n      grade_type_id: 1,\n      grade_value: 85.5,\n      max_grade: 100.0\n    }, {\n      id: 2,\n      student_id: 1,\n      course_id: 1,\n      grade_type_id: 3,\n      grade_value: 92.0,\n      max_grade: 100.0\n    }, {\n      id: 3,\n      student_id: 2,\n      course_id: 1,\n      grade_type_id: 1,\n      grade_value: 78.0,\n      max_grade: 100.0\n    }, {\n      id: 4,\n      student_id: 3,\n      course_id: 3,\n      grade_type_id: 1,\n      grade_value: 91.0,\n      max_grade: 100.0\n    }];\n    const params = {\n      page,\n      limit\n    };\n    if (studentId) params.student_id = studentId;\n    if (courseId) params.course_id = courseId;\n    return await this.fetchData('/grades', {\n      params,\n      fallbackData: fallbackGrades\n    });\n  }\n\n  // Attendance Data\n  async getAttendance(studentId = null, courseId = null, date = null, page = 1, limit = 10) {\n    const fallbackAttendance = [{\n      id: 1,\n      student_id: 1,\n      course_id: 1,\n      attendance_date: '2024-09-02',\n      status: 'present'\n    }, {\n      id: 2,\n      student_id: 1,\n      course_id: 1,\n      attendance_date: '2024-09-04',\n      status: 'present'\n    }, {\n      id: 3,\n      student_id: 1,\n      course_id: 1,\n      attendance_date: '2024-09-06',\n      status: 'absent'\n    }, {\n      id: 4,\n      student_id: 2,\n      course_id: 1,\n      attendance_date: '2024-09-02',\n      status: 'present'\n    }];\n    const params = {\n      page,\n      limit\n    };\n    if (studentId) params.student_id = studentId;\n    if (courseId) params.course_id = courseId;\n    if (date) params.date = date;\n    return await this.fetchData('/attendance', {\n      params,\n      fallbackData: fallbackAttendance\n    });\n  }\n\n  // Fee Payments Data\n  async getFeePayments(studentId = null, page = 1, limit = 10) {\n    const fallbackPayments = [{\n      id: 1,\n      student_id: 1,\n      academic_year_id: 1,\n      semester: 1,\n      fee_type: 'tuition',\n      amount: 2500.00,\n      status: 'paid'\n    }, {\n      id: 2,\n      student_id: 2,\n      academic_year_id: 1,\n      semester: 1,\n      fee_type: 'tuition',\n      amount: 2500.00,\n      status: 'paid'\n    }, {\n      id: 3,\n      student_id: 1,\n      academic_year_id: 1,\n      semester: 1,\n      fee_type: 'library',\n      amount: 50.00,\n      status: 'paid'\n    }];\n    const params = {\n      page,\n      limit\n    };\n    if (studentId) params.student_id = studentId;\n    return await this.fetchData('/fee-payments', {\n      params,\n      fallbackData: fallbackPayments\n    });\n  }\n\n  // Scholarships Data\n  async getScholarships(page = 1, limit = 10) {\n    const fallbackScholarships = [{\n      id: 1,\n      scholarship_name: 'Academic Excellence',\n      description: 'For outstanding academic performance',\n      amount: 1000.00\n    }, {\n      id: 2,\n      scholarship_name: 'Need-Based Aid',\n      description: 'Financial assistance for students in need',\n      amount: 750.00\n    }, {\n      id: 3,\n      scholarship_name: 'Merit Scholarship',\n      description: 'For exceptional achievements',\n      amount: 1500.00\n    }];\n    return await this.fetchData('/scholarships', {\n      params: {\n        page,\n        limit\n      },\n      fallbackData: fallbackScholarships\n    });\n  }\n\n  // Generic CRUD operations\n  async createRecord(endpoint, data) {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`${API_BASE}${endpoint}`, data, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Create failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n  async updateRecord(endpoint, id, data) {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_BASE}${endpoint}/${id}`, data, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Update failed for ${endpoint}/${id}:`, error);\n      throw error;\n    }\n  }\n  async deleteRecord(endpoint, id) {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.delete(`${API_BASE}${endpoint}/${id}`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Delete failed for ${endpoint}/${id}:`, error);\n      throw error;\n    }\n  }\n}\nexport default new SMSDBDataFetcher();","map":{"version":3,"names":["axios","API_BASE","PUBLIC_API_BASE","PHP_FALLBACK_BASE","SMSDBDataFetcher","constructor","isBackendOnline","checkBackendStatus","response","get","timeout","status","console","log","error","fetchData","endpoint","options","useAuth","params","fallbackData","queryString","URLSearchParams","toString","fullEndpoint","token","localStorage","getItem","headers","Authorization","data","normalizeResponse","message","phpEndpoint","success","rows","count","length","_isMockData","Error","undefined","Array","isArray","getDashboardStats","fallbackStats","students","total","active","inactive","teachers","departments","programs","batches","courses","getDepartments","page","limit","search","fallbackDepts","id","department_name","teacher_id","name","getPrograms","fallbackPrograms","program_name","department_id","degree_level_id","getMajors","fallbackMajors","major_name","description","getStudents","fallbackStudents","student_code","surname","email","batch_id","major_id","getTeachers","fallbackTeachers","teacher_code","first_name","last_name","getCourses","fallbackCourses","course_code","course_name","credits","getBatches","fallbackBatches","code","program_id","academic_year_id","capacity","getAcademicYears","fallbackAcademicYears","academic_year","start_date","end_date","is_current","getDegreeLevels","fallbackDegreeLevels","degree_level_name","getSubjectAssignments","fallbackSubjects","course_id","semester","getGrades","studentId","courseId","fallbackGrades","student_id","grade_type_id","grade_value","max_grade","getAttendance","date","fallbackAttendance","attendance_date","getFeePayments","fallbackPayments","fee_type","amount","getScholarships","fallbackScholarships","scholarship_name","createRecord","post","updateRecord","put","deleteRecord","delete"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/services/smsdb-data-fetcher.js"],"sourcesContent":["/**\n * Comprehensive data fetcher for all frontend pages using smsdb\n * This service provides unified data fetching with fallback mechanisms\n */\n\nimport axios from 'axios';\n\n// API Configuration\nconst API_BASE = 'http://localhost:5000/api';\nconst PUBLIC_API_BASE = 'http://localhost:5000/api/public';\nconst PHP_FALLBACK_BASE = '/sms-spi/sms-spi/api';\n\nclass SMSDBDataFetcher {\n  constructor() {\n    this.isBackendOnline = false;\n    this.checkBackendStatus();\n  }\n\n  // Check if backend server is running\n  async checkBackendStatus() {\n    try {\n      const response = await axios.get(`${API_BASE}/dashboard/stats`, { timeout: 3000 });\n      this.isBackendOnline = response.status === 200;\n      console.log('‚úÖ Backend server is online');\n      return true;\n    } catch (error) {\n      this.isBackendOnline = false;\n      console.log('‚ùå Backend server is offline, using fallback methods');\n      return false;\n    }\n  }\n\n  // Generic API call with triple fallback\n  async fetchData(endpoint, options = {}) {\n    const { useAuth = false, params = {}, fallbackData = null } = options;\n    \n    // Build query string\n    const queryString = new URLSearchParams(params).toString();\n    const fullEndpoint = queryString ? `${endpoint}?${queryString}` : endpoint;\n    \n    // Method 1: Try authenticated endpoint\n    if (useAuth) {\n      try {\n        const token = localStorage.getItem('token');\n        const response = await axios.get(`${API_BASE}${fullEndpoint}`, {\n          headers: { Authorization: `Bearer ${token}` },\n          timeout: 5000\n        });\n        \n        if (response.data) {\n          console.log(`‚úÖ Auth API success: ${endpoint}`);\n          return this.normalizeResponse(response.data);\n        }\n      } catch (error) {\n        console.log(`‚ö†Ô∏è Auth API failed: ${endpoint}`, error.message);\n      }\n    }\n    \n    // Method 2: Try public endpoint\n    try {\n      const response = await axios.get(`${PUBLIC_API_BASE}${fullEndpoint}`, { timeout: 5000 });\n      \n      if (response.data) {\n        console.log(`‚úÖ Public API success: ${endpoint}`);\n        return this.normalizeResponse(response.data);\n      }\n    } catch (error) {\n      console.log(`‚ö†Ô∏è Public API failed: ${endpoint}`, error.message);\n    }\n    \n    // Method 3: Try PHP fallback\n    try {\n      const phpEndpoint = `${PHP_FALLBACK_BASE}${endpoint}/public.php${queryString ? `?${queryString}` : ''}`;\n      const response = await axios.get(phpEndpoint, { timeout: 5000 });\n      \n      if (response.data) {\n        console.log(`‚úÖ PHP fallback success: ${endpoint}`);\n        return this.normalizeResponse(response.data);\n      }\n    } catch (error) {\n      console.log(`‚ö†Ô∏è PHP fallback failed: ${endpoint}`, error.message);\n    }\n    \n    // Method 4: Return fallback data or mock data\n    if (fallbackData) {\n      console.log(`üìã Using fallback data for: ${endpoint}`);\n      return { success: true, rows: fallbackData, count: fallbackData.length, _isMockData: true };\n    }\n    \n    throw new Error(`All data fetching methods failed for ${endpoint}`);\n  }\n\n  // Normalize different response formats\n  normalizeResponse(data) {\n    if (data.success !== undefined) {\n      return data; // Already in correct format\n    }\n    \n    if (Array.isArray(data)) {\n      return { success: true, rows: data, count: data.length };\n    }\n    \n    if (data.data) {\n      return { success: true, rows: data.data, count: data.data.length || 1 };\n    }\n    \n    return { success: true, rows: [data], count: 1 };\n  }\n\n  // Dashboard Data\n  async getDashboardStats() {\n    const fallbackStats = {\n      students: { total: 8, active: 8, inactive: 0 },\n      teachers: { total: 7, active: 7 },\n      departments: { total: 6 },\n      programs: { total: 8 },\n      batches: { total: 8 },\n      courses: { total: 14 }\n    };\n\n    return await this.fetchData('/dashboard/stats', { \n      useAuth: true, \n      fallbackData: [fallbackStats] \n    });\n  }\n\n  // Departments Data\n  async getDepartments(page = 1, limit = 10, search = '') {\n    const fallbackDepts = [\n      { id: 1, department_name: 'Computer Science', teacher_id: 1, name: 'Computer Science' },\n      { id: 2, department_name: 'Business Administration', teacher_id: 2, name: 'Business Administration' },\n      { id: 3, department_name: 'Engineering', teacher_id: 5, name: 'Engineering' },\n      { id: 4, department_name: 'Mathematics', teacher_id: 4, name: 'Mathematics' },\n      { id: 5, department_name: 'English Literature', teacher_id: 6, name: 'English Literature' }\n    ];\n\n    return await this.fetchData('/departments', {\n      params: { page, limit, search },\n      fallbackData: fallbackDepts\n    });\n  }\n\n  // Programs Data\n  async getPrograms(page = 1, limit = 10, search = '') {\n    const fallbackPrograms = [\n      { id: 1, program_name: 'Computer Science Program', department_id: 1, degree_level_id: 1 },\n      { id: 2, program_name: 'Business Administration Program', department_id: 2, degree_level_id: 1 },\n      { id: 3, program_name: 'Software Engineering Program', department_id: 1, degree_level_id: 1 },\n      { id: 4, program_name: 'Information Technology Program', department_id: 1, degree_level_id: 2 }\n    ];\n\n    return await this.fetchData('/programs', {\n      params: { page, limit, search },\n      fallbackData: fallbackPrograms\n    });\n  }\n\n  // Majors Data\n  async getMajors(page = 1, limit = 10, search = '') {\n    const fallbackMajors = [\n      { id: 1, major_name: 'Software Development', department_id: 1, description: 'Focus on programming and software design' },\n      { id: 2, major_name: 'Database Systems', department_id: 1, description: 'Specialization in database design and management' },\n      { id: 3, major_name: 'Business Management', department_id: 2, description: 'General business management and leadership' },\n      { id: 4, major_name: 'Marketing', department_id: 2, description: 'Marketing strategies and consumer behavior' }\n    ];\n\n    return await this.fetchData('/majors', {\n      params: { page, limit, search },\n      fallbackData: fallbackMajors\n    });\n  }\n\n  // Students Data\n  async getStudents(page = 1, limit = 10, search = '') {\n    const fallbackStudents = [\n      { id: 1, student_code: 'S2024001', name: 'Alice', surname: 'Johnson', email: 'alice.johnson@student.sms.edu', batch_id: 1, major_id: 1 },\n      { id: 2, student_code: 'S2024002', name: 'Bob', surname: 'Wilson', email: 'bob.wilson@student.sms.edu', batch_id: 1, major_id: 1 },\n      { id: 3, student_code: 'S2024003', name: 'Carol', surname: 'Brown', email: 'carol.brown@student.sms.edu', batch_id: 2, major_id: 2 },\n      { id: 4, student_code: 'S2024004', name: 'David', surname: 'Miller', email: 'david.miller@student.sms.edu', batch_id: 3, major_id: 3 }\n    ];\n\n    return await this.fetchData('/students', {\n      params: { page, limit, search },\n      fallbackData: fallbackStudents\n    });\n  }\n\n  // Teachers Data\n  async getTeachers(page = 1, limit = 10, search = '') {\n    const fallbackTeachers = [\n      { id: 1, teacher_code: 'T001', first_name: 'John', last_name: 'Doe', email: 'john.doe@sms.edu', department_id: 1 },\n      { id: 2, teacher_code: 'T002', first_name: 'Jane', last_name: 'Smith', email: 'jane.smith@sms.edu', department_id: 2 },\n      { id: 3, teacher_code: 'T003', first_name: 'Michael', last_name: 'Johnson', email: 'michael.johnson@sms.edu', department_id: 1 },\n      { id: 4, teacher_code: 'T004', first_name: 'Sarah', last_name: 'Davis', email: 'sarah.davis@sms.edu', department_id: 4 }\n    ];\n\n    return await this.fetchData('/teachers', {\n      params: { page, limit, search },\n      fallbackData: fallbackTeachers\n    });\n  }\n\n  // Courses Data\n  async getCourses(page = 1, limit = 10, search = '') {\n    const fallbackCourses = [\n      { id: 1, course_code: 'CS101', course_name: 'Introduction to Programming', credits: 3, department_id: 1 },\n      { id: 2, course_code: 'CS201', course_name: 'Data Structures', credits: 4, department_id: 1 },\n      { id: 3, course_code: 'CS301', course_name: 'Database Systems', credits: 3, department_id: 1 },\n      { id: 4, course_code: 'BA101', course_name: 'Business Fundamentals', credits: 3, department_id: 2 }\n    ];\n\n    return await this.fetchData('/courses', {\n      params: { page, limit, search },\n      fallbackData: fallbackCourses\n    });\n  }\n\n  // Batches Data\n  async getBatches(page = 1, limit = 10, search = '') {\n    const fallbackBatches = [\n      { id: 1, name: 'CS-2024-A', code: 'CS24A', program_id: 1, academic_year_id: 1, capacity: 30 },\n      { id: 2, name: 'CS-2024-B', code: 'CS24B', program_id: 1, academic_year_id: 1, capacity: 30 },\n      { id: 3, name: 'BA-2024-A', code: 'BA24A', program_id: 2, academic_year_id: 1, capacity: 25 },\n      { id: 4, name: 'SE-2024-A', code: 'SE24A', program_id: 3, academic_year_id: 1, capacity: 25 }\n    ];\n\n    return await this.fetchData('/batches', {\n      params: { page, limit, search },\n      fallbackData: fallbackBatches\n    });\n  }\n\n  // Academic Years Data\n  async getAcademicYears(page = 1, limit = 10) {\n    const fallbackAcademicYears = [\n      { id: 1, academic_year: '2024-2025', start_date: '2024-09-01', end_date: '2025-06-30', is_current: 1 },\n      { id: 2, academic_year: '2023-2024', start_date: '2023-09-01', end_date: '2024-06-30', is_current: 0 },\n      { id: 3, academic_year: '2025-2026', start_date: '2025-09-01', end_date: '2026-06-30', is_current: 0 }\n    ];\n\n    return await this.fetchData('/academic-years', {\n      params: { page, limit },\n      fallbackData: fallbackAcademicYears\n    });\n  }\n\n  // Degree Levels Data\n  async getDegreeLevels() {\n    const fallbackDegreeLevels = [\n      { id: 1, degree_level_name: 'Bachelor Degree', description: 'Undergraduate 4-year degree program' },\n      { id: 2, degree_level_name: 'Associate Degree', description: 'Undergraduate 2-year degree program' },\n      { id: 3, degree_level_name: 'Master Degree', description: 'Graduate 2-year degree program' }\n    ];\n\n    return await this.fetchData('/degree-levels', {\n      fallbackData: fallbackDegreeLevels\n    });\n  }\n\n  // Subject Assignments Data\n  async getSubjectAssignments(page = 1, limit = 10, search = '') {\n    const fallbackSubjects = [\n      { id: 1, teacher_id: 1, course_id: 1, academic_year_id: 1, semester: 1, batch_id: 1 },\n      { id: 2, teacher_id: 1, course_id: 2, academic_year_id: 1, semester: 1, batch_id: 1 },\n      { id: 3, teacher_id: 3, course_id: 3, academic_year_id: 1, semester: 1, batch_id: 2 },\n      { id: 4, teacher_id: 2, course_id: 4, academic_year_id: 1, semester: 1, batch_id: 3 }\n    ];\n\n    return await this.fetchData('/manage-subjects', {\n      params: { page, limit, search },\n      fallbackData: fallbackSubjects\n    });\n  }\n\n  // Grades Data\n  async getGrades(studentId = null, courseId = null, page = 1, limit = 10) {\n    const fallbackGrades = [\n      { id: 1, student_id: 1, course_id: 1, grade_type_id: 1, grade_value: 85.5, max_grade: 100.0 },\n      { id: 2, student_id: 1, course_id: 1, grade_type_id: 3, grade_value: 92.0, max_grade: 100.0 },\n      { id: 3, student_id: 2, course_id: 1, grade_type_id: 1, grade_value: 78.0, max_grade: 100.0 },\n      { id: 4, student_id: 3, course_id: 3, grade_type_id: 1, grade_value: 91.0, max_grade: 100.0 }\n    ];\n\n    const params = { page, limit };\n    if (studentId) params.student_id = studentId;\n    if (courseId) params.course_id = courseId;\n\n    return await this.fetchData('/grades', {\n      params,\n      fallbackData: fallbackGrades\n    });\n  }\n\n  // Attendance Data\n  async getAttendance(studentId = null, courseId = null, date = null, page = 1, limit = 10) {\n    const fallbackAttendance = [\n      { id: 1, student_id: 1, course_id: 1, attendance_date: '2024-09-02', status: 'present' },\n      { id: 2, student_id: 1, course_id: 1, attendance_date: '2024-09-04', status: 'present' },\n      { id: 3, student_id: 1, course_id: 1, attendance_date: '2024-09-06', status: 'absent' },\n      { id: 4, student_id: 2, course_id: 1, attendance_date: '2024-09-02', status: 'present' }\n    ];\n\n    const params = { page, limit };\n    if (studentId) params.student_id = studentId;\n    if (courseId) params.course_id = courseId;\n    if (date) params.date = date;\n\n    return await this.fetchData('/attendance', {\n      params,\n      fallbackData: fallbackAttendance\n    });\n  }\n\n  // Fee Payments Data\n  async getFeePayments(studentId = null, page = 1, limit = 10) {\n    const fallbackPayments = [\n      { id: 1, student_id: 1, academic_year_id: 1, semester: 1, fee_type: 'tuition', amount: 2500.00, status: 'paid' },\n      { id: 2, student_id: 2, academic_year_id: 1, semester: 1, fee_type: 'tuition', amount: 2500.00, status: 'paid' },\n      { id: 3, student_id: 1, academic_year_id: 1, semester: 1, fee_type: 'library', amount: 50.00, status: 'paid' }\n    ];\n\n    const params = { page, limit };\n    if (studentId) params.student_id = studentId;\n\n    return await this.fetchData('/fee-payments', {\n      params,\n      fallbackData: fallbackPayments\n    });\n  }\n\n  // Scholarships Data\n  async getScholarships(page = 1, limit = 10) {\n    const fallbackScholarships = [\n      { id: 1, scholarship_name: 'Academic Excellence', description: 'For outstanding academic performance', amount: 1000.00 },\n      { id: 2, scholarship_name: 'Need-Based Aid', description: 'Financial assistance for students in need', amount: 750.00 },\n      { id: 3, scholarship_name: 'Merit Scholarship', description: 'For exceptional achievements', amount: 1500.00 }\n    ];\n\n    return await this.fetchData('/scholarships', {\n      params: { page, limit },\n      fallbackData: fallbackScholarships\n    });\n  }\n\n  // Generic CRUD operations\n  async createRecord(endpoint, data) {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.post(`${API_BASE}${endpoint}`, data, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Create failed for ${endpoint}:`, error);\n      throw error;\n    }\n  }\n\n  async updateRecord(endpoint, id, data) {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.put(`${API_BASE}${endpoint}/${id}`, data, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Update failed for ${endpoint}/${id}:`, error);\n      throw error;\n    }\n  }\n\n  async deleteRecord(endpoint, id) {\n    try {\n      const token = localStorage.getItem('token');\n      const response = await axios.delete(`${API_BASE}${endpoint}/${id}`, {\n        headers: { Authorization: `Bearer ${token}` }\n      });\n      return response.data;\n    } catch (error) {\n      console.error(`Delete failed for ${endpoint}/${id}:`, error);\n      throw error;\n    }\n  }\n}\n\nexport default new SMSDBDataFetcher();\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}