{"ast":null,"code":"import api from './api';\nconst CourseService = {\n  // Get all courses with pagination and filters\n  getAll: async (page = 1, limit = 10, search = '', departmentId = '') => {\n    try {\n      const params = new URLSearchParams({\n        page: page.toString(),\n        limit: limit.toString(),\n        ...(search && {\n          search\n        }),\n        ...(departmentId && {\n          department_id: departmentId\n        })\n      });\n      const response = await api.get(`/courses?${params}`);\n      return response.data;\n    } catch (error) {\n      var _error$response, _error$response2, _error$response3;\n      console.error('Error fetching courses:', error);\n\n      // Handle authentication errors gracefully\n      if (error.isAuthError || ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n        console.log('Authentication required for courses');\n        throw new Error('Authentication required. Please log in again.');\n      }\n\n      // Handle permission errors\n      if (error.isPermissionError || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n        throw new Error('You do not have permission to view courses.');\n      }\n\n      // Handle course not found or server errors\n      if (((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 404) {\n        throw new Error('Courses endpoint not found. Please check server configuration.');\n      }\n      throw error;\n    }\n  },\n  // Get course by ID\n  getById: async id => {\n    try {\n      const response = await api.get(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching course:', error);\n      throw error;\n    }\n  },\n  // Get courses by department\n  getByDepartment: async departmentId => {\n    try {\n      const response = await api.get(`/courses/department/${departmentId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching courses by department:', error);\n      throw error;\n    }\n  },\n  // Get courses by program\n  getByProgram: async programId => {\n    try {\n      const response = await api.get(`/courses/program/${programId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching courses by program:', error);\n      throw error;\n    }\n  },\n  // Create new course\n  create: async courseData => {\n    try {\n      const response = await api.post('/courses', courseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating course:', error);\n      throw error;\n    }\n  },\n  // Update course\n  update: async (id, courseData) => {\n    try {\n      const response = await api.put(`/courses/${id}`, courseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating course:', error);\n      throw error;\n    }\n  },\n  // Delete course\n  delete: async id => {\n    try {\n      const response = await api.delete(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting course:', error);\n      throw error;\n    }\n  },\n  // Get course prerequisites\n  getPrerequisites: async courseId => {\n    try {\n      const response = await api.get(`/courses/${courseId}/prerequisites`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching course prerequisites:', error);\n      throw error;\n    }\n  },\n  // Add course prerequisite\n  addPrerequisite: async (courseId, prerequisiteId) => {\n    try {\n      const response = await api.post(`/courses/${courseId}/prerequisites`, {\n        prerequisite_id: prerequisiteId\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding course prerequisite:', error);\n      throw error;\n    }\n  },\n  // Remove course prerequisite\n  removePrerequisite: async (courseId, prerequisiteId) => {\n    try {\n      const response = await api.delete(`/courses/${courseId}/prerequisites/${prerequisiteId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error removing course prerequisite:', error);\n      throw error;\n    }\n  }\n};\nexport default CourseService;","map":{"version":3,"names":["api","CourseService","getAll","page","limit","search","departmentId","params","URLSearchParams","toString","department_id","response","get","data","error","_error$response","_error$response2","_error$response3","console","isAuthError","status","log","Error","isPermissionError","getById","id","getByDepartment","getByProgram","programId","create","courseData","post","update","put","delete","getPrerequisites","courseId","addPrerequisite","prerequisiteId","prerequisite_id","removePrerequisite"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/services/course.service.js"],"sourcesContent":["import api from './api';\n\nconst CourseService = {\n  // Get all courses with pagination and filters\n  getAll: async (page = 1, limit = 10, search = '', departmentId = '') => {\n    try {\n      const params = new URLSearchParams({\n        page: page.toString(),\n        limit: limit.toString(),\n        ...(search && { search }),\n        ...(departmentId && { department_id: departmentId })\n      });\n\n      const response = await api.get(`/courses?${params}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching courses:', error);\n      \n      // Handle authentication errors gracefully\n      if (error.isAuthError || error.response?.status === 401) {\n        console.log('Authentication required for courses');\n        throw new Error('Authentication required. Please log in again.');\n      }\n      \n      // Handle permission errors\n      if (error.isPermissionError || error.response?.status === 403) {\n        throw new Error('You do not have permission to view courses.');\n      }\n      \n      // Handle course not found or server errors\n      if (error.response?.status === 404) {\n        throw new Error('Courses endpoint not found. Please check server configuration.');\n      }\n      \n      throw error;\n    }\n  },\n\n  // Get course by ID\n  getById: async (id) => {\n    try {\n      const response = await api.get(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching course:', error);\n      throw error;\n    }\n  },\n\n  // Get courses by department\n  getByDepartment: async (departmentId) => {\n    try {\n      const response = await api.get(`/courses/department/${departmentId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching courses by department:', error);\n      throw error;\n    }\n  },\n\n  // Get courses by program\n  getByProgram: async (programId) => {\n    try {\n      const response = await api.get(`/courses/program/${programId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching courses by program:', error);\n      throw error;\n    }\n  },\n\n  // Create new course\n  create: async (courseData) => {\n    try {\n      const response = await api.post('/courses', courseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error creating course:', error);\n      throw error;\n    }\n  },\n\n  // Update course\n  update: async (id, courseData) => {\n    try {\n      const response = await api.put(`/courses/${id}`, courseData);\n      return response.data;\n    } catch (error) {\n      console.error('Error updating course:', error);\n      throw error;\n    }\n  },\n\n  // Delete course\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`/courses/${id}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error deleting course:', error);\n      throw error;\n    }\n  },\n\n  // Get course prerequisites\n  getPrerequisites: async (courseId) => {\n    try {\n      const response = await api.get(`/courses/${courseId}/prerequisites`);\n      return response.data;\n    } catch (error) {\n      console.error('Error fetching course prerequisites:', error);\n      throw error;\n    }\n  },\n\n  // Add course prerequisite\n  addPrerequisite: async (courseId, prerequisiteId) => {\n    try {\n      const response = await api.post(`/courses/${courseId}/prerequisites`, {\n        prerequisite_id: prerequisiteId\n      });\n      return response.data;\n    } catch (error) {\n      console.error('Error adding course prerequisite:', error);\n      throw error;\n    }\n  },\n\n  // Remove course prerequisite\n  removePrerequisite: async (courseId, prerequisiteId) => {\n    try {\n      const response = await api.delete(`/courses/${courseId}/prerequisites/${prerequisiteId}`);\n      return response.data;\n    } catch (error) {\n      console.error('Error removing course prerequisite:', error);\n      throw error;\n    }\n  }\n};\n\nexport default CourseService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}