{"ast":null,"code":"import api from './api';\nimport axios from 'axios';\nimport SMSDBDataFetcher from './smsdb-data-fetcher';\nconst ACADEMIC_YEAR_URL = '/academic-years';\nconst PUBLIC_ACADEMIC_YEAR_URL = '/public/academic-years';\nconst DIRECT_API_URL = 'http://localhost:5000/api';\nconst AcademicYearService = {\n  getAll: async (page = 1, limit = 10, search = '') => {\n    try {\n      // Try direct public endpoint first\n      console.log('Trying public academic years endpoint');\n      const publicResponse = await axios.get(`${DIRECT_API_URL}${PUBLIC_ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`);\n      if (publicResponse.data && publicResponse.data.success && publicResponse.data.rows) {\n        console.log('Public academic years endpoint succeeded');\n        return {\n          success: true,\n          rows: publicResponse.data.rows || [],\n          count: publicResponse.data.count || 0,\n          data: publicResponse.data.rows || [],\n          pagination: publicResponse.data.pagination\n        };\n      }\n    } catch (error) {\n      console.log('Public endpoint failed, trying authenticated endpoint');\n      // Fallback to authenticated endpoint\n      try {\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        const response = await axios.get(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`, {\n          headers\n        });\n\n        // Ensure consistent response format\n        return {\n          success: response.data.success || true,\n          rows: response.data.rows || response.data.data || [],\n          count: response.data.count || 0,\n          data: response.data.rows || response.data.data || [],\n          pagination: response.data.pagination\n        };\n      } catch (authError) {\n        console.error('All endpoints failed:', authError.message);\n        return {\n          success: false,\n          error: authError.message,\n          data: [],\n          rows: [],\n          count: 0\n        };\n      }\n    }\n  },\n  getAllOpen: async (page = 1, limit = 10, search = '') => {\n    try {\n      // First try with the api instance\n      const response = await api.get(`${OPEN_ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`);\n      return response.data;\n    } catch (error) {\n      console.log('Falling back to direct API call with port 5000');\n      // Fallback to direct call with correct port\n      const response = await axios.get(`${DIRECT_API_URL}${OPEN_ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`);\n      return response.data;\n    }\n  },\n  getById: async id => {\n    const response = await api.get(`${ACADEMIC_YEAR_URL}/${id}`);\n    return response.data;\n  },\n  getCurrentYear: async () => {\n    try {\n      // Try public endpoint first\n      const publicResponse = await axios.get(`${DIRECT_API_URL}${PUBLIC_ACADEMIC_YEAR_URL}/current`);\n      return publicResponse.data;\n    } catch (error) {\n      // Fallback to authenticated endpoint\n      const response = await api.get(`${ACADEMIC_YEAR_URL}/current/active`);\n      return response.data;\n    }\n  },\n  create: async academicYearData => {\n    try {\n      // Try public endpoint first (no auth required)\n      console.log('Trying public academic years create endpoint');\n      const publicResponse = await axios.post(`${DIRECT_API_URL}${PUBLIC_ACADEMIC_YEAR_URL}`, academicYearData);\n      if (publicResponse.data && publicResponse.data.success) {\n        console.log('Public academic years create succeeded');\n        return publicResponse.data;\n      }\n    } catch (error) {\n      console.log('Public create endpoint failed, trying authenticated endpoint');\n      try {\n        const token = localStorage.getItem('token');\n        const headers = token ? {\n          Authorization: `Bearer ${token}`\n        } : {};\n        const response = await axios.post(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}`, academicYearData, {\n          headers\n        });\n        return response.data;\n      } catch (authError) {\n        // Fallback to api instance\n        const response = await api.post(ACADEMIC_YEAR_URL, academicYearData);\n        return response.data;\n      }\n    }\n  },\n  update: async (id, academicYearData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      const response = await axios.put(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}`, academicYearData, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.put(`${ACADEMIC_YEAR_URL}/${id}`, academicYearData);\n      return response.data;\n    }\n  },\n  delete: async id => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      const response = await axios.delete(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.delete(`${ACADEMIC_YEAR_URL}/${id}`);\n      return response.data;\n    }\n  },\n  setCurrent: async id => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      const response = await axios.put(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}/set-current`, {}, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.put(`${ACADEMIC_YEAR_URL}/${id}/set-current`);\n      return response.data;\n    }\n  },\n  checkDependencies: async id => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? {\n        Authorization: `Bearer ${token}`\n      } : {};\n      const response = await axios.post(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}/check-dependencies`, {}, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.post(`${ACADEMIC_YEAR_URL}/${id}/check-dependencies`);\n      return response.data;\n    }\n  }\n};\nexport default AcademicYearService;","map":{"version":3,"names":["api","axios","SMSDBDataFetcher","ACADEMIC_YEAR_URL","PUBLIC_ACADEMIC_YEAR_URL","DIRECT_API_URL","AcademicYearService","getAll","page","limit","search","console","log","publicResponse","get","data","success","rows","count","pagination","error","token","localStorage","getItem","headers","Authorization","response","authError","message","getAllOpen","OPEN_ACADEMIC_YEAR_URL","getById","id","getCurrentYear","create","academicYearData","post","update","put","delete","setCurrent","checkDependencies"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/services/academicYear.service.js"],"sourcesContent":["import api from './api';\nimport axios from 'axios';\nimport SMSDBDataFetcher from './smsdb-data-fetcher';\n\nconst ACADEMIC_YEAR_URL = '/academic-years';\nconst PUBLIC_ACADEMIC_YEAR_URL = '/public/academic-years';\nconst DIRECT_API_URL = 'http://localhost:5000/api';\n\nconst AcademicYearService = {\n  getAll: async (page = 1, limit = 10, search = '') => {\n    try {\n      // Try direct public endpoint first\n      console.log('Trying public academic years endpoint');\n      const publicResponse = await axios.get(`${DIRECT_API_URL}${PUBLIC_ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`);\n      \n      if (publicResponse.data && publicResponse.data.success && publicResponse.data.rows) {\n        console.log('Public academic years endpoint succeeded');\n        return {\n          success: true,\n          rows: publicResponse.data.rows || [],\n          count: publicResponse.data.count || 0,\n          data: publicResponse.data.rows || [],\n          pagination: publicResponse.data.pagination\n        };\n      }\n    } catch (error) {\n      console.log('Public endpoint failed, trying authenticated endpoint');\n      // Fallback to authenticated endpoint\n      try {\n        const token = localStorage.getItem('token');\n        const headers = token ? { Authorization: `Bearer ${token}` } : {};\n        \n        const response = await axios.get(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`, {\n          headers\n        });\n        \n        // Ensure consistent response format\n        return {\n          success: response.data.success || true,\n          rows: response.data.rows || response.data.data || [],\n          count: response.data.count || 0,\n          data: response.data.rows || response.data.data || [],\n          pagination: response.data.pagination\n        };\n      } catch (authError) {\n        console.error('All endpoints failed:', authError.message);\n        return { \n          success: false, \n          error: authError.message, \n          data: [], \n          rows: [], \n          count: 0 \n        };\n      }\n    }\n  },\n\n  getAllOpen: async (page = 1, limit = 10, search = '') => {\n    try {\n      // First try with the api instance\n      const response = await api.get(`${OPEN_ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`);\n      return response.data;\n    } catch (error) {\n      console.log('Falling back to direct API call with port 5000');\n      // Fallback to direct call with correct port\n      const response = await axios.get(`${DIRECT_API_URL}${OPEN_ACADEMIC_YEAR_URL}?page=${page}&limit=${limit}&search=${search}`);\n      return response.data;\n    }\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`${ACADEMIC_YEAR_URL}/${id}`);\n    return response.data;\n  },\n\n  getCurrentYear: async () => {\n    try {\n      // Try public endpoint first\n      const publicResponse = await axios.get(`${DIRECT_API_URL}${PUBLIC_ACADEMIC_YEAR_URL}/current`);\n      return publicResponse.data;\n    } catch (error) {\n      // Fallback to authenticated endpoint\n      const response = await api.get(`${ACADEMIC_YEAR_URL}/current/active`);\n      return response.data;\n    }\n  },\n\n  create: async (academicYearData) => {\n    try {\n      // Try public endpoint first (no auth required)\n      console.log('Trying public academic years create endpoint');\n      const publicResponse = await axios.post(`${DIRECT_API_URL}${PUBLIC_ACADEMIC_YEAR_URL}`, academicYearData);\n      \n      if (publicResponse.data && publicResponse.data.success) {\n        console.log('Public academic years create succeeded');\n        return publicResponse.data;\n      }\n    } catch (error) {\n      console.log('Public create endpoint failed, trying authenticated endpoint');\n      try {\n        const token = localStorage.getItem('token');\n        const headers = token ? { Authorization: `Bearer ${token}` } : {};\n        \n        const response = await axios.post(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}`, academicYearData, {\n          headers\n        });\n        return response.data;\n      } catch (authError) {\n        // Fallback to api instance\n        const response = await api.post(ACADEMIC_YEAR_URL, academicYearData);\n        return response.data;\n      }\n    }\n  },\n\n  update: async (id, academicYearData) => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\n      \n      const response = await axios.put(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}`, academicYearData, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.put(`${ACADEMIC_YEAR_URL}/${id}`, academicYearData);\n      return response.data;\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\n      \n      const response = await axios.delete(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}`, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.delete(`${ACADEMIC_YEAR_URL}/${id}`);\n      return response.data;\n    }\n  },\n\n  setCurrent: async (id) => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\n      \n      const response = await axios.put(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}/set-current`, {}, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.put(`${ACADEMIC_YEAR_URL}/${id}/set-current`);\n      return response.data;\n    }\n  },\n\n  checkDependencies: async (id) => {\n    try {\n      const token = localStorage.getItem('token');\n      const headers = token ? { Authorization: `Bearer ${token}` } : {};\n      \n      const response = await axios.post(`${DIRECT_API_URL}${ACADEMIC_YEAR_URL}/${id}/check-dependencies`, {}, {\n        headers\n      });\n      return response.data;\n    } catch (error) {\n      // Fallback to api instance\n      const response = await api.post(`${ACADEMIC_YEAR_URL}/${id}/check-dependencies`);\n      return response.data;\n    }\n  }\n};\n\nexport default AcademicYearService;\n"],"mappings":"AAAA,OAAOA,GAAG,MAAM,OAAO;AACvB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,gBAAgB,MAAM,sBAAsB;AAEnD,MAAMC,iBAAiB,GAAG,iBAAiB;AAC3C,MAAMC,wBAAwB,GAAG,wBAAwB;AACzD,MAAMC,cAAc,GAAG,2BAA2B;AAElD,MAAMC,mBAAmB,GAAG;EAC1BC,MAAM,EAAE,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,KAAK;IACnD,IAAI;MACF;MACAC,OAAO,CAACC,GAAG,CAAC,uCAAuC,CAAC;MACpD,MAAMC,cAAc,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGT,cAAc,GAAGD,wBAAwB,SAASI,IAAI,UAAUC,KAAK,WAAWC,MAAM,EAAE,CAAC;MAEnI,IAAIG,cAAc,CAACE,IAAI,IAAIF,cAAc,CAACE,IAAI,CAACC,OAAO,IAAIH,cAAc,CAACE,IAAI,CAACE,IAAI,EAAE;QAClFN,OAAO,CAACC,GAAG,CAAC,0CAA0C,CAAC;QACvD,OAAO;UACLI,OAAO,EAAE,IAAI;UACbC,IAAI,EAAEJ,cAAc,CAACE,IAAI,CAACE,IAAI,IAAI,EAAE;UACpCC,KAAK,EAAEL,cAAc,CAACE,IAAI,CAACG,KAAK,IAAI,CAAC;UACrCH,IAAI,EAAEF,cAAc,CAACE,IAAI,CAACE,IAAI,IAAI,EAAE;UACpCE,UAAU,EAAEN,cAAc,CAACE,IAAI,CAACI;QAClC,CAAC;MACH;IACF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAAC,uDAAuD,CAAC;MACpE;MACA,IAAI;QACF,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAO,GAAGH,KAAK,GAAG;UAAEI,aAAa,EAAE,UAAUJ,KAAK;QAAG,CAAC,GAAG,CAAC,CAAC;QAEjE,MAAMK,QAAQ,GAAG,MAAMzB,KAAK,CAACa,GAAG,CAAC,GAAGT,cAAc,GAAGF,iBAAiB,SAASK,IAAI,UAAUC,KAAK,WAAWC,MAAM,EAAE,EAAE;UACrHc;QACF,CAAC,CAAC;;QAEF;QACA,OAAO;UACLR,OAAO,EAAEU,QAAQ,CAACX,IAAI,CAACC,OAAO,IAAI,IAAI;UACtCC,IAAI,EAAES,QAAQ,CAACX,IAAI,CAACE,IAAI,IAAIS,QAAQ,CAACX,IAAI,CAACA,IAAI,IAAI,EAAE;UACpDG,KAAK,EAAEQ,QAAQ,CAACX,IAAI,CAACG,KAAK,IAAI,CAAC;UAC/BH,IAAI,EAAEW,QAAQ,CAACX,IAAI,CAACE,IAAI,IAAIS,QAAQ,CAACX,IAAI,CAACA,IAAI,IAAI,EAAE;UACpDI,UAAU,EAAEO,QAAQ,CAACX,IAAI,CAACI;QAC5B,CAAC;MACH,CAAC,CAAC,OAAOQ,SAAS,EAAE;QAClBhB,OAAO,CAACS,KAAK,CAAC,uBAAuB,EAAEO,SAAS,CAACC,OAAO,CAAC;QACzD,OAAO;UACLZ,OAAO,EAAE,KAAK;UACdI,KAAK,EAAEO,SAAS,CAACC,OAAO;UACxBb,IAAI,EAAE,EAAE;UACRE,IAAI,EAAE,EAAE;UACRC,KAAK,EAAE;QACT,CAAC;MACH;IACF;EACF,CAAC;EAEDW,UAAU,EAAE,MAAAA,CAAOrB,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,KAAK;IACvD,IAAI;MACF;MACA,MAAMgB,QAAQ,GAAG,MAAM1B,GAAG,CAACc,GAAG,CAAC,GAAGgB,sBAAsB,SAAStB,IAAI,UAAUC,KAAK,WAAWC,MAAM,EAAE,CAAC;MACxG,OAAOgB,QAAQ,CAACX,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAAC,gDAAgD,CAAC;MAC7D;MACA,MAAMc,QAAQ,GAAG,MAAMzB,KAAK,CAACa,GAAG,CAAC,GAAGT,cAAc,GAAGyB,sBAAsB,SAAStB,IAAI,UAAUC,KAAK,WAAWC,MAAM,EAAE,CAAC;MAC3H,OAAOgB,QAAQ,CAACX,IAAI;IACtB;EACF,CAAC;EAEDgB,OAAO,EAAE,MAAOC,EAAE,IAAK;IACrB,MAAMN,QAAQ,GAAG,MAAM1B,GAAG,CAACc,GAAG,CAAC,GAAGX,iBAAiB,IAAI6B,EAAE,EAAE,CAAC;IAC5D,OAAON,QAAQ,CAACX,IAAI;EACtB,CAAC;EAEDkB,cAAc,EAAE,MAAAA,CAAA,KAAY;IAC1B,IAAI;MACF;MACA,MAAMpB,cAAc,GAAG,MAAMZ,KAAK,CAACa,GAAG,CAAC,GAAGT,cAAc,GAAGD,wBAAwB,UAAU,CAAC;MAC9F,OAAOS,cAAc,CAACE,IAAI;IAC5B,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACA,MAAMM,QAAQ,GAAG,MAAM1B,GAAG,CAACc,GAAG,CAAC,GAAGX,iBAAiB,iBAAiB,CAAC;MACrE,OAAOuB,QAAQ,CAACX,IAAI;IACtB;EACF,CAAC;EAEDmB,MAAM,EAAE,MAAOC,gBAAgB,IAAK;IAClC,IAAI;MACF;MACAxB,OAAO,CAACC,GAAG,CAAC,8CAA8C,CAAC;MAC3D,MAAMC,cAAc,GAAG,MAAMZ,KAAK,CAACmC,IAAI,CAAC,GAAG/B,cAAc,GAAGD,wBAAwB,EAAE,EAAE+B,gBAAgB,CAAC;MAEzG,IAAItB,cAAc,CAACE,IAAI,IAAIF,cAAc,CAACE,IAAI,CAACC,OAAO,EAAE;QACtDL,OAAO,CAACC,GAAG,CAAC,wCAAwC,CAAC;QACrD,OAAOC,cAAc,CAACE,IAAI;MAC5B;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdT,OAAO,CAACC,GAAG,CAAC,8DAA8D,CAAC;MAC3E,IAAI;QACF,MAAMS,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;QAC3C,MAAMC,OAAO,GAAGH,KAAK,GAAG;UAAEI,aAAa,EAAE,UAAUJ,KAAK;QAAG,CAAC,GAAG,CAAC,CAAC;QAEjE,MAAMK,QAAQ,GAAG,MAAMzB,KAAK,CAACmC,IAAI,CAAC,GAAG/B,cAAc,GAAGF,iBAAiB,EAAE,EAAEgC,gBAAgB,EAAE;UAC3FX;QACF,CAAC,CAAC;QACF,OAAOE,QAAQ,CAACX,IAAI;MACtB,CAAC,CAAC,OAAOY,SAAS,EAAE;QAClB;QACA,MAAMD,QAAQ,GAAG,MAAM1B,GAAG,CAACoC,IAAI,CAACjC,iBAAiB,EAAEgC,gBAAgB,CAAC;QACpE,OAAOT,QAAQ,CAACX,IAAI;MACtB;IACF;EACF,CAAC;EAEDsB,MAAM,EAAE,MAAAA,CAAOL,EAAE,EAAEG,gBAAgB,KAAK;IACtC,IAAI;MACF,MAAMd,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,OAAO,GAAGH,KAAK,GAAG;QAAEI,aAAa,EAAE,UAAUJ,KAAK;MAAG,CAAC,GAAG,CAAC,CAAC;MAEjE,MAAMK,QAAQ,GAAG,MAAMzB,KAAK,CAACqC,GAAG,CAAC,GAAGjC,cAAc,GAAGF,iBAAiB,IAAI6B,EAAE,EAAE,EAAEG,gBAAgB,EAAE;QAChGX;MACF,CAAC,CAAC;MACF,OAAOE,QAAQ,CAACX,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACA,MAAMM,QAAQ,GAAG,MAAM1B,GAAG,CAACsC,GAAG,CAAC,GAAGnC,iBAAiB,IAAI6B,EAAE,EAAE,EAAEG,gBAAgB,CAAC;MAC9E,OAAOT,QAAQ,CAACX,IAAI;IACtB;EACF,CAAC;EAEDwB,MAAM,EAAE,MAAOP,EAAE,IAAK;IACpB,IAAI;MACF,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,OAAO,GAAGH,KAAK,GAAG;QAAEI,aAAa,EAAE,UAAUJ,KAAK;MAAG,CAAC,GAAG,CAAC,CAAC;MAEjE,MAAMK,QAAQ,GAAG,MAAMzB,KAAK,CAACsC,MAAM,CAAC,GAAGlC,cAAc,GAAGF,iBAAiB,IAAI6B,EAAE,EAAE,EAAE;QACjFR;MACF,CAAC,CAAC;MACF,OAAOE,QAAQ,CAACX,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACA,MAAMM,QAAQ,GAAG,MAAM1B,GAAG,CAACuC,MAAM,CAAC,GAAGpC,iBAAiB,IAAI6B,EAAE,EAAE,CAAC;MAC/D,OAAON,QAAQ,CAACX,IAAI;IACtB;EACF,CAAC;EAEDyB,UAAU,EAAE,MAAOR,EAAE,IAAK;IACxB,IAAI;MACF,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,OAAO,GAAGH,KAAK,GAAG;QAAEI,aAAa,EAAE,UAAUJ,KAAK;MAAG,CAAC,GAAG,CAAC,CAAC;MAEjE,MAAMK,QAAQ,GAAG,MAAMzB,KAAK,CAACqC,GAAG,CAAC,GAAGjC,cAAc,GAAGF,iBAAiB,IAAI6B,EAAE,cAAc,EAAE,CAAC,CAAC,EAAE;QAC9FR;MACF,CAAC,CAAC;MACF,OAAOE,QAAQ,CAACX,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACA,MAAMM,QAAQ,GAAG,MAAM1B,GAAG,CAACsC,GAAG,CAAC,GAAGnC,iBAAiB,IAAI6B,EAAE,cAAc,CAAC;MACxE,OAAON,QAAQ,CAACX,IAAI;IACtB;EACF,CAAC;EAED0B,iBAAiB,EAAE,MAAOT,EAAE,IAAK;IAC/B,IAAI;MACF,MAAMX,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;MAC3C,MAAMC,OAAO,GAAGH,KAAK,GAAG;QAAEI,aAAa,EAAE,UAAUJ,KAAK;MAAG,CAAC,GAAG,CAAC,CAAC;MAEjE,MAAMK,QAAQ,GAAG,MAAMzB,KAAK,CAACmC,IAAI,CAAC,GAAG/B,cAAc,GAAGF,iBAAiB,IAAI6B,EAAE,qBAAqB,EAAE,CAAC,CAAC,EAAE;QACtGR;MACF,CAAC,CAAC;MACF,OAAOE,QAAQ,CAACX,IAAI;IACtB,CAAC,CAAC,OAAOK,KAAK,EAAE;MACd;MACA,MAAMM,QAAQ,GAAG,MAAM1B,GAAG,CAACoC,IAAI,CAAC,GAAGjC,iBAAiB,IAAI6B,EAAE,qBAAqB,CAAC;MAChF,OAAON,QAAQ,CAACX,IAAI;IACtB;EACF;AACF,CAAC;AAED,eAAeT,mBAAmB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}