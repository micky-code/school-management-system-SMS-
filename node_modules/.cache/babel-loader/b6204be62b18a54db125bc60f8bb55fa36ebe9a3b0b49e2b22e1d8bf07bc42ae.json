{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sms-frontend-clone\\\\src\\\\pages\\\\admin\\\\Programs.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Table from '../../components/common/Table';\nimport Pagination from '../../components/common/Pagination';\nimport SearchFilter from '../../components/common/SearchFilter';\nimport Modal from '../../components/common/Modal';\nimport Alert from '../../components/common/Alert';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport ProgramService from '../../services/program.service';\nimport DepartmentService from '../../services/department.service';\nimport DegreeLevelService from '../../services/degreeLevel.service';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ProgramSchema = Yup.object().shape({\n  program_name: Yup.string().required('Program name is required').min(2, 'Program name must be at least 2 characters').max(100, 'Program name must be at most 100 characters'),\n  department_id: Yup.number().required('Department is required').positive('Please select a valid department'),\n  degree_id: Yup.number().required('Degree level is required').positive('Please select a valid degree level'),\n  main_program_id: Yup.number().nullable().positive('Please select a valid main program')\n});\nconst Programs = () => {\n  _s();\n  const [programs, setPrograms] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [degreeLevels, setDegreeLevels] = useState([]);\n  const [mainPrograms, setMainPrograms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingProgram, setEditingProgram] = useState(null);\n  const [confirmDelete, setConfirmDelete] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Fetch programs with enhanced data including department and degree level info\n  const fetchPrograms = async (page = 1, search = '') => {\n    try {\n      setLoading(true);\n      setError('');\n      console.log('Fetching programs with search:', search, 'page:', page);\n      const response = await ProgramService.getAll(page, 10, search);\n      console.log('Programs API response:', response);\n      if (response.success === false) {\n        setError(response.error || 'Failed to fetch programs');\n        setPrograms([]);\n      } else {\n        // Handle different response formats\n        if (response.data && Array.isArray(response.data)) {\n          setPrograms(response.data);\n          setTotalPages(response.totalPages || Math.ceil((response.count || 0) / 10));\n          setError('');\n        } else if (response.rows && Array.isArray(response.rows)) {\n          setPrograms(response.rows);\n          setTotalPages(Math.ceil((response.count || 0) / 10));\n          setError('');\n        } else if (Array.isArray(response)) {\n          setPrograms(response);\n          setTotalPages(Math.ceil(response.length / 10));\n          setError('');\n        } else {\n          setPrograms([]);\n          setTotalPages(1);\n          setError('Received unexpected data format from server');\n        }\n      }\n      setCurrentPage(page);\n    } catch (error) {\n      console.error('Error fetching programs:', error);\n      setError('Failed to fetch programs. Please try again.');\n      setPrograms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch departments for dropdown\n  const fetchDepartments = async () => {\n    try {\n      const response = await DepartmentService.getAll(1, 100);\n      console.log('Departments API response:', response);\n      if (response.success !== false) {\n        if (response.data && Array.isArray(response.data)) {\n          setDepartments(response.data);\n        } else if (response.rows && Array.isArray(response.rows)) {\n          setDepartments(response.rows);\n        } else if (Array.isArray(response)) {\n          setDepartments(response);\n        } else {\n          setDepartments([]);\n        }\n      } else {\n        console.error('Failed to fetch departments:', response.error);\n        setDepartments([]);\n      }\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setDepartments([]);\n    }\n  };\n\n  // Fetch degree levels for dropdown\n  const fetchDegreeLevels = async () => {\n    try {\n      const response = await DegreeLevelService.getAll();\n      console.log('Degree levels API response:', response);\n      if (response.success !== false) {\n        if (response.data && Array.isArray(response.data)) {\n          setDegreeLevels(response.data);\n        } else if (response.rows && Array.isArray(response.rows)) {\n          setDegreeLevels(response.rows);\n        } else if (Array.isArray(response)) {\n          setDegreeLevels(response);\n        } else {\n          setDegreeLevels([]);\n        }\n      } else {\n        console.error('Failed to fetch degree levels:', response.error);\n        setDegreeLevels([]);\n      }\n    } catch (error) {\n      console.error('Error fetching degree levels:', error);\n      setDegreeLevels([]);\n    }\n  };\n  useEffect(() => {\n    fetchPrograms();\n    fetchDepartments();\n    fetchDegreeLevels();\n  }, []);\n  const handleSearch = ({\n    search\n  }) => {\n    setSearchTerm(search);\n    fetchPrograms(1, search);\n  };\n  const handlePageChange = page => {\n    fetchPrograms(page, searchTerm);\n  };\n  const handleEdit = program => {\n    setEditingProgram(program);\n    setIsModalOpen(true);\n  };\n  const handleDelete = async id => {\n    try {\n      setLoading(true);\n      await ProgramService.delete(id);\n      setSuccess('Program deleted successfully');\n      fetchPrograms(currentPage, searchTerm);\n      setConfirmDelete(null);\n    } catch (error) {\n      var _error$response, _error$response$data;\n      setError(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to delete program');\n    } finally {\n      setLoading(false);\n    }\n  };\n  const handleSubmit = async (values, {\n    setSubmitting,\n    resetForm\n  }) => {\n    try {\n      setLoading(true);\n      if (editingProgram) {\n        await ProgramService.update(editingProgram.id, values);\n        setSuccess('Program updated successfully');\n      } else {\n        await ProgramService.create(values);\n        setSuccess('Program created successfully');\n      }\n      resetForm();\n      setIsModalOpen(false);\n      setEditingProgram(null);\n      fetchPrograms(currentPage, searchTerm);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      setError(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to save program');\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n  const columns = [{\n    key: 'id',\n    label: 'ID'\n  }, {\n    key: 'program_name',\n    label: 'Program Name',\n    render: item => item.program_name || item.name || 'N/A'\n  }, {\n    key: 'department_name',\n    label: 'Department',\n    render: item => item.department_name || 'N/A'\n  }, {\n    key: 'degree_level',\n    label: 'Degree Level',\n    render: item => item.degree_level || item.degree || 'N/A'\n  }, {\n    key: 'main_program_name',\n    label: 'Main Program',\n    render: item => item.main_program_name || 'N/A'\n  }, {\n    key: 'student_count',\n    label: 'Students',\n    render: item => item.student_count || '0'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"space-y-6\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-between items-center\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-2xl font-semibold text-gray-900\",\n        children: \"Programs\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 232,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          setEditingProgram(null);\n          setIsModalOpen(true);\n        },\n        className: \"btn-primary\",\n        children: \"Add Program\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 233,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 231,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"error\",\n      message: error,\n      onClose: () => setError('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 245,\n      columnNumber: 9\n    }, this), success && /*#__PURE__*/_jsxDEV(Alert, {\n      type: \"success\",\n      message: success,\n      onClose: () => setSuccess('')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(SearchFilter, {\n      onSearch: handleSearch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 260,\n      columnNumber: 7\n    }, this), loading && !programs.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"flex justify-center items-center h-64\",\n      children: /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n        size: \"lg\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 263,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"bg-white shadow overflow-hidden sm:rounded-md\",\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          columns: columns,\n          data: programs,\n          actions: true,\n          onEdit: handleEdit,\n          onDelete: program => setConfirmDelete(program)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 268,\n        columnNumber: 11\n      }, this), totalPages > 1 && /*#__PURE__*/_jsxDEV(Pagination, {\n        currentPage: currentPage,\n        totalPages: totalPages,\n        onPageChange: handlePageChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 279,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: isModalOpen,\n      onClose: () => setIsModalOpen(false),\n      title: editingProgram ? 'Edit Program' : 'Add Program',\n      children: /*#__PURE__*/_jsxDEV(Formik, {\n        initialValues: {\n          program_name: (editingProgram === null || editingProgram === void 0 ? void 0 : editingProgram.program_name) || (editingProgram === null || editingProgram === void 0 ? void 0 : editingProgram.name) || '',\n          department_id: (editingProgram === null || editingProgram === void 0 ? void 0 : editingProgram.department_id) || '',\n          degree_id: (editingProgram === null || editingProgram === void 0 ? void 0 : editingProgram.degree_id) || '',\n          main_program_id: (editingProgram === null || editingProgram === void 0 ? void 0 : editingProgram.main_program_id) || ''\n        },\n        validationSchema: ProgramSchema,\n        onSubmit: handleSubmit,\n        children: ({\n          isSubmitting\n        }) => /*#__PURE__*/_jsxDEV(Form, {\n          className: \"space-y-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"program_name\",\n              className: \"form-label\",\n              children: \"Program Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 307,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              type: \"text\",\n              id: \"program_name\",\n              name: \"program_name\",\n              className: \"form-input\",\n              placeholder: \"e.g., Computer Science\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 310,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"program_name\",\n              component: \"div\",\n              className: \"form-error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 317,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 306,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"department_id\",\n              className: \"form-label\",\n              children: \"Department\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 325,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              id: \"department_id\",\n              name: \"department_id\",\n              className: \"form-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 334,\n                columnNumber: 19\n              }, this), departments.map(dept => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: dept.id,\n                children: dept.department_name || dept.name\n              }, dept.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 336,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 328,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"department_id\",\n              component: \"div\",\n              className: \"form-error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 341,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 324,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"degree_id\",\n              className: \"form-label\",\n              children: \"Degree Level\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 349,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              id: \"degree_id\",\n              name: \"degree_id\",\n              className: \"form-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Degree Level\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 358,\n                columnNumber: 19\n              }, this), degreeLevels.map(degree => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: degree.id,\n                children: degree.degree || degree.name\n              }, degree.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 360,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 352,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"degree_id\",\n              component: \"div\",\n              className: \"form-error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 365,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 348,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"main_program_id\",\n              className: \"form-label\",\n              children: \"Main Program (Optional)\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 373,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Field, {\n              as: \"select\",\n              id: \"main_program_id\",\n              name: \"main_program_id\",\n              className: \"form-input\",\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\",\n                children: \"Select Main Program\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 382,\n                columnNumber: 19\n              }, this), programs.map(program => /*#__PURE__*/_jsxDEV(\"option\", {\n                value: program.id,\n                children: program.program_name || program.name\n              }, program.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 384,\n                columnNumber: 21\n              }, this))]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 376,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n              name: \"main_program_id\",\n              component: \"div\",\n              className: \"form-error\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 389,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 372,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"flex justify-end space-x-3 pt-4\",\n            children: [/*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setIsModalOpen(false),\n              className: \"btn-secondary\",\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 397,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"submit\",\n              disabled: isSubmitting || loading,\n              className: \"btn-primary\",\n              children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n                size: \"sm\",\n                color: \"white\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 409,\n                columnNumber: 30\n              }, this) : 'Save'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 404,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 396,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 305,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 294,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 289,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Modal, {\n      isOpen: !!confirmDelete,\n      onClose: () => setConfirmDelete(null),\n      title: \"Confirm Delete\",\n      size: \"sm\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"space-y-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [\"Are you sure you want to delete the program \\\"\", (confirmDelete === null || confirmDelete === void 0 ? void 0 : confirmDelete.program_name) || (confirmDelete === null || confirmDelete === void 0 ? void 0 : confirmDelete.name), \"\\\"? This action cannot be undone.\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 425,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-end space-x-3 pt-4\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => setConfirmDelete(null),\n            className: \"btn-secondary\",\n            children: \"Cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 430,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            onClick: () => handleDelete(confirmDelete.id),\n            className: \"btn-danger\",\n            children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n              size: \"sm\",\n              color: \"white\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 442,\n              columnNumber: 26\n            }, this) : 'Delete'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 437,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 429,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 424,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 418,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 230,\n    columnNumber: 5\n  }, this);\n};\n_s(Programs, \"SW07msi6Dvm/ym1YnaK4BF2T1cc=\");\n_c = Programs;\nexport default Programs;\nvar _c;\n$RefreshReg$(_c, \"Programs\");","map":{"version":3,"names":["React","useState","useEffect","Formik","Form","Field","ErrorMessage","Yup","Table","Pagination","SearchFilter","Modal","Alert","LoadingSpinner","ProgramService","DepartmentService","DegreeLevelService","jsxDEV","_jsxDEV","Fragment","_Fragment","ProgramSchema","object","shape","program_name","string","required","min","max","department_id","number","positive","degree_id","main_program_id","nullable","Programs","_s","programs","setPrograms","departments","setDepartments","degreeLevels","setDegreeLevels","mainPrograms","setMainPrograms","loading","setLoading","error","setError","success","setSuccess","currentPage","setCurrentPage","totalPages","setTotalPages","isModalOpen","setIsModalOpen","editingProgram","setEditingProgram","confirmDelete","setConfirmDelete","searchTerm","setSearchTerm","fetchPrograms","page","search","console","log","response","getAll","data","Array","isArray","Math","ceil","count","rows","length","fetchDepartments","fetchDegreeLevels","handleSearch","handlePageChange","handleEdit","program","handleDelete","id","delete","_error$response","_error$response$data","message","handleSubmit","values","setSubmitting","resetForm","update","create","_error$response2","_error$response2$data","columns","key","label","render","item","name","department_name","degree_level","degree","main_program_name","student_count","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","type","onClose","onSearch","size","actions","onEdit","onDelete","onPageChange","isOpen","title","initialValues","validationSchema","onSubmit","isSubmitting","htmlFor","placeholder","component","as","value","map","dept","disabled","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/pages/admin/Programs.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport Table from '../../components/common/Table';\nimport Pagination from '../../components/common/Pagination';\nimport SearchFilter from '../../components/common/SearchFilter';\nimport Modal from '../../components/common/Modal';\nimport Alert from '../../components/common/Alert';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport ProgramService from '../../services/program.service';\nimport DepartmentService from '../../services/department.service';\nimport DegreeLevelService from '../../services/degreeLevel.service';\n\nconst ProgramSchema = Yup.object().shape({\n  program_name: Yup.string()\n    .required('Program name is required')\n    .min(2, 'Program name must be at least 2 characters')\n    .max(100, 'Program name must be at most 100 characters'),\n  department_id: Yup.number()\n    .required('Department is required')\n    .positive('Please select a valid department'),\n  degree_id: Yup.number()\n    .required('Degree level is required')\n    .positive('Please select a valid degree level'),\n  main_program_id: Yup.number()\n    .nullable()\n    .positive('Please select a valid main program')\n});\n\nconst Programs = () => {\n  const [programs, setPrograms] = useState([]);\n  const [departments, setDepartments] = useState([]);\n  const [degreeLevels, setDegreeLevels] = useState([]);\n  const [mainPrograms, setMainPrograms] = useState([]);\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [currentPage, setCurrentPage] = useState(1);\n  const [totalPages, setTotalPages] = useState(1);\n  const [isModalOpen, setIsModalOpen] = useState(false);\n  const [editingProgram, setEditingProgram] = useState(null);\n  const [confirmDelete, setConfirmDelete] = useState(null);\n  const [searchTerm, setSearchTerm] = useState('');\n\n  // Fetch programs with enhanced data including department and degree level info\n  const fetchPrograms = async (page = 1, search = '') => {\n    try {\n      setLoading(true);\n      setError('');\n      \n      console.log('Fetching programs with search:', search, 'page:', page);\n      \n      const response = await ProgramService.getAll(page, 10, search);\n      console.log('Programs API response:', response);\n      \n      if (response.success === false) {\n        setError(response.error || 'Failed to fetch programs');\n        setPrograms([]);\n      } else {\n        // Handle different response formats\n        if (response.data && Array.isArray(response.data)) {\n          setPrograms(response.data);\n          setTotalPages(response.totalPages || Math.ceil((response.count || 0) / 10));\n          setError('');\n        } else if (response.rows && Array.isArray(response.rows)) {\n          setPrograms(response.rows);\n          setTotalPages(Math.ceil((response.count || 0) / 10));\n          setError('');\n        } else if (Array.isArray(response)) {\n          setPrograms(response);\n          setTotalPages(Math.ceil(response.length / 10));\n          setError('');\n        } else {\n          setPrograms([]);\n          setTotalPages(1);\n          setError('Received unexpected data format from server');\n        }\n      }\n      \n      setCurrentPage(page);\n    } catch (error) {\n      console.error('Error fetching programs:', error);\n      setError('Failed to fetch programs. Please try again.');\n      setPrograms([]);\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  // Fetch departments for dropdown\n  const fetchDepartments = async () => {\n    try {\n      const response = await DepartmentService.getAll(1, 100);\n      console.log('Departments API response:', response);\n      \n      if (response.success !== false) {\n        if (response.data && Array.isArray(response.data)) {\n          setDepartments(response.data);\n        } else if (response.rows && Array.isArray(response.rows)) {\n          setDepartments(response.rows);\n        } else if (Array.isArray(response)) {\n          setDepartments(response);\n        } else {\n          setDepartments([]);\n        }\n      } else {\n        console.error('Failed to fetch departments:', response.error);\n        setDepartments([]);\n      }\n    } catch (error) {\n      console.error('Error fetching departments:', error);\n      setDepartments([]);\n    }\n  };\n\n  // Fetch degree levels for dropdown\n  const fetchDegreeLevels = async () => {\n    try {\n      const response = await DegreeLevelService.getAll();\n      console.log('Degree levels API response:', response);\n      \n      if (response.success !== false) {\n        if (response.data && Array.isArray(response.data)) {\n          setDegreeLevels(response.data);\n        } else if (response.rows && Array.isArray(response.rows)) {\n          setDegreeLevels(response.rows);\n        } else if (Array.isArray(response)) {\n          setDegreeLevels(response);\n        } else {\n          setDegreeLevels([]);\n        }\n      } else {\n        console.error('Failed to fetch degree levels:', response.error);\n        setDegreeLevels([]);\n      }\n    } catch (error) {\n      console.error('Error fetching degree levels:', error);\n      setDegreeLevels([]);\n    }\n  };\n\n  useEffect(() => {\n    fetchPrograms();\n    fetchDepartments();\n    fetchDegreeLevels();\n  }, []);\n\n  const handleSearch = ({ search }) => {\n    setSearchTerm(search);\n    fetchPrograms(1, search);\n  };\n\n  const handlePageChange = (page) => {\n    fetchPrograms(page, searchTerm);\n  };\n\n  const handleEdit = (program) => {\n    setEditingProgram(program);\n    setIsModalOpen(true);\n  };\n\n  const handleDelete = async (id) => {\n    try {\n      setLoading(true);\n      await ProgramService.delete(id);\n      setSuccess('Program deleted successfully');\n      fetchPrograms(currentPage, searchTerm);\n      setConfirmDelete(null);\n    } catch (error) {\n      setError(error.response?.data?.message || 'Failed to delete program');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  const handleSubmit = async (values, { setSubmitting, resetForm }) => {\n    try {\n      setLoading(true);\n      \n      if (editingProgram) {\n        await ProgramService.update(editingProgram.id, values);\n        setSuccess('Program updated successfully');\n      } else {\n        await ProgramService.create(values);\n        setSuccess('Program created successfully');\n      }\n      \n      resetForm();\n      setIsModalOpen(false);\n      setEditingProgram(null);\n      fetchPrograms(currentPage, searchTerm);\n    } catch (error) {\n      setError(error.response?.data?.message || 'Failed to save program');\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n\n  const columns = [\n    { key: 'id', label: 'ID' },\n    { \n      key: 'program_name', \n      label: 'Program Name',\n      render: (item) => item.program_name || item.name || 'N/A'\n    },\n    { \n      key: 'department_name', \n      label: 'Department',\n      render: (item) => item.department_name || 'N/A'\n    },\n    { \n      key: 'degree_level', \n      label: 'Degree Level',\n      render: (item) => item.degree_level || item.degree || 'N/A'\n    },\n    { \n      key: 'main_program_name', \n      label: 'Main Program',\n      render: (item) => item.main_program_name || 'N/A'\n    },\n    { \n      key: 'student_count', \n      label: 'Students',\n      render: (item) => item.student_count || '0'\n    }\n  ];\n\n  return (\n    <div className=\"space-y-6\">\n      <div className=\"flex justify-between items-center\">\n        <h1 className=\"text-2xl font-semibold text-gray-900\">Programs</h1>\n        <button\n          onClick={() => {\n            setEditingProgram(null);\n            setIsModalOpen(true);\n          }}\n          className=\"btn-primary\"\n        >\n          Add Program\n        </button>\n      </div>\n\n      {error && (\n        <Alert \n          type=\"error\" \n          message={error} \n          onClose={() => setError('')}\n        />\n      )}\n\n      {success && (\n        <Alert \n          type=\"success\" \n          message={success} \n          onClose={() => setSuccess('')}\n        />\n      )}\n\n      <SearchFilter onSearch={handleSearch} />\n\n      {loading && !programs.length ? (\n        <div className=\"flex justify-center items-center h-64\">\n          <LoadingSpinner size=\"lg\" />\n        </div>\n      ) : (\n        <>\n          <div className=\"bg-white shadow overflow-hidden sm:rounded-md\">\n            <Table\n              columns={columns}\n              data={programs}\n              actions={true}\n              onEdit={handleEdit}\n              onDelete={(program) => setConfirmDelete(program)}\n            />\n          </div>\n\n          {totalPages > 1 && (\n            <Pagination\n              currentPage={currentPage}\n              totalPages={totalPages}\n              onPageChange={handlePageChange}\n            />\n          )}\n        </>\n      )}\n\n      {/* Add/Edit Modal */}\n      <Modal\n        isOpen={isModalOpen}\n        onClose={() => setIsModalOpen(false)}\n        title={editingProgram ? 'Edit Program' : 'Add Program'}\n      >\n        <Formik\n          initialValues={{\n            program_name: editingProgram?.program_name || editingProgram?.name || '',\n            department_id: editingProgram?.department_id || '',\n            degree_id: editingProgram?.degree_id || '',\n            main_program_id: editingProgram?.main_program_id || ''\n          }}\n          validationSchema={ProgramSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form className=\"space-y-4\">\n              <div>\n                <label htmlFor=\"program_name\" className=\"form-label\">\n                  Program Name\n                </label>\n                <Field\n                  type=\"text\"\n                  id=\"program_name\"\n                  name=\"program_name\"\n                  className=\"form-input\"\n                  placeholder=\"e.g., Computer Science\"\n                />\n                <ErrorMessage\n                  name=\"program_name\"\n                  component=\"div\"\n                  className=\"form-error\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"department_id\" className=\"form-label\">\n                  Department\n                </label>\n                <Field\n                  as=\"select\"\n                  id=\"department_id\"\n                  name=\"department_id\"\n                  className=\"form-input\"\n                >\n                  <option value=\"\">Select Department</option>\n                  {departments.map((dept) => (\n                    <option key={dept.id} value={dept.id}>\n                      {dept.department_name || dept.name}\n                    </option>\n                  ))}\n                </Field>\n                <ErrorMessage\n                  name=\"department_id\"\n                  component=\"div\"\n                  className=\"form-error\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"degree_id\" className=\"form-label\">\n                  Degree Level\n                </label>\n                <Field\n                  as=\"select\"\n                  id=\"degree_id\"\n                  name=\"degree_id\"\n                  className=\"form-input\"\n                >\n                  <option value=\"\">Select Degree Level</option>\n                  {degreeLevels.map((degree) => (\n                    <option key={degree.id} value={degree.id}>\n                      {degree.degree || degree.name}\n                    </option>\n                  ))}\n                </Field>\n                <ErrorMessage\n                  name=\"degree_id\"\n                  component=\"div\"\n                  className=\"form-error\"\n                />\n              </div>\n\n              <div>\n                <label htmlFor=\"main_program_id\" className=\"form-label\">\n                  Main Program (Optional)\n                </label>\n                <Field\n                  as=\"select\"\n                  id=\"main_program_id\"\n                  name=\"main_program_id\"\n                  className=\"form-input\"\n                >\n                  <option value=\"\">Select Main Program</option>\n                  {programs.map((program) => (\n                    <option key={program.id} value={program.id}>\n                      {program.program_name || program.name}\n                    </option>\n                  ))}\n                </Field>\n                <ErrorMessage\n                  name=\"main_program_id\"\n                  component=\"div\"\n                  className=\"form-error\"\n                />\n              </div>\n\n              <div className=\"flex justify-end space-x-3 pt-4\">\n                <button\n                  type=\"button\"\n                  onClick={() => setIsModalOpen(false)}\n                  className=\"btn-secondary\"\n                >\n                  Cancel\n                </button>\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting || loading}\n                  className=\"btn-primary\"\n                >\n                  {loading ? <LoadingSpinner size=\"sm\" color=\"white\" /> : 'Save'}\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n      </Modal>\n\n      {/* Delete Confirmation Modal */}\n      <Modal\n        isOpen={!!confirmDelete}\n        onClose={() => setConfirmDelete(null)}\n        title=\"Confirm Delete\"\n        size=\"sm\"\n      >\n        <div className=\"space-y-4\">\n          <p>\n            Are you sure you want to delete the program \"{confirmDelete?.program_name || confirmDelete?.name}\"?\n            This action cannot be undone.\n          </p>\n          <div className=\"flex justify-end space-x-3 pt-4\">\n            <button\n              type=\"button\"\n              onClick={() => setConfirmDelete(null)}\n              className=\"btn-secondary\"\n            >\n              Cancel\n            </button>\n            <button\n              type=\"button\"\n              onClick={() => handleDelete(confirmDelete.id)}\n              className=\"btn-danger\"\n            >\n              {loading ? <LoadingSpinner size=\"sm\" color=\"white\" /> : 'Delete'}\n            </button>\n          </div>\n        </div>\n      </Modal>\n    </div>\n  );\n};\n\nexport default Programs;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,SAASC,MAAM,EAAEC,IAAI,EAAEC,KAAK,EAAEC,YAAY,QAAQ,QAAQ;AAC1D,OAAO,KAAKC,GAAG,MAAM,KAAK;AAC1B,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,UAAU,MAAM,oCAAoC;AAC3D,OAAOC,YAAY,MAAM,sCAAsC;AAC/D,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,KAAK,MAAM,+BAA+B;AACjD,OAAOC,cAAc,MAAM,wCAAwC;AACnE,OAAOC,cAAc,MAAM,gCAAgC;AAC3D,OAAOC,iBAAiB,MAAM,mCAAmC;AACjE,OAAOC,kBAAkB,MAAM,oCAAoC;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEpE,MAAMC,aAAa,GAAGd,GAAG,CAACe,MAAM,CAAC,CAAC,CAACC,KAAK,CAAC;EACvCC,YAAY,EAAEjB,GAAG,CAACkB,MAAM,CAAC,CAAC,CACvBC,QAAQ,CAAC,0BAA0B,CAAC,CACpCC,GAAG,CAAC,CAAC,EAAE,4CAA4C,CAAC,CACpDC,GAAG,CAAC,GAAG,EAAE,6CAA6C,CAAC;EAC1DC,aAAa,EAAEtB,GAAG,CAACuB,MAAM,CAAC,CAAC,CACxBJ,QAAQ,CAAC,wBAAwB,CAAC,CAClCK,QAAQ,CAAC,kCAAkC,CAAC;EAC/CC,SAAS,EAAEzB,GAAG,CAACuB,MAAM,CAAC,CAAC,CACpBJ,QAAQ,CAAC,0BAA0B,CAAC,CACpCK,QAAQ,CAAC,oCAAoC,CAAC;EACjDE,eAAe,EAAE1B,GAAG,CAACuB,MAAM,CAAC,CAAC,CAC1BI,QAAQ,CAAC,CAAC,CACVH,QAAQ,CAAC,oCAAoC;AAClD,CAAC,CAAC;AAEF,MAAMI,QAAQ,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACrB,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGrC,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACsC,WAAW,EAAEC,cAAc,CAAC,GAAGvC,QAAQ,CAAC,EAAE,CAAC;EAClD,MAAM,CAACwC,YAAY,EAAEC,eAAe,CAAC,GAAGzC,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC0C,YAAY,EAAEC,eAAe,CAAC,GAAG3C,QAAQ,CAAC,EAAE,CAAC;EACpD,MAAM,CAAC4C,OAAO,EAAEC,UAAU,CAAC,GAAG7C,QAAQ,CAAC,KAAK,CAAC;EAC7C,MAAM,CAAC8C,KAAK,EAAEC,QAAQ,CAAC,GAAG/C,QAAQ,CAAC,EAAE,CAAC;EACtC,MAAM,CAACgD,OAAO,EAAEC,UAAU,CAAC,GAAGjD,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACkD,WAAW,EAAEC,cAAc,CAAC,GAAGnD,QAAQ,CAAC,CAAC,CAAC;EACjD,MAAM,CAACoD,UAAU,EAAEC,aAAa,CAAC,GAAGrD,QAAQ,CAAC,CAAC,CAAC;EAC/C,MAAM,CAACsD,WAAW,EAAEC,cAAc,CAAC,GAAGvD,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAM,CAACwD,cAAc,EAAEC,iBAAiB,CAAC,GAAGzD,QAAQ,CAAC,IAAI,CAAC;EAC1D,MAAM,CAAC0D,aAAa,EAAEC,gBAAgB,CAAC,GAAG3D,QAAQ,CAAC,IAAI,CAAC;EACxD,MAAM,CAAC4D,UAAU,EAAEC,aAAa,CAAC,GAAG7D,QAAQ,CAAC,EAAE,CAAC;;EAEhD;EACA,MAAM8D,aAAa,GAAG,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,MAAM,GAAG,EAAE,KAAK;IACrD,IAAI;MACFnB,UAAU,CAAC,IAAI,CAAC;MAChBE,QAAQ,CAAC,EAAE,CAAC;MAEZkB,OAAO,CAACC,GAAG,CAAC,gCAAgC,EAAEF,MAAM,EAAE,OAAO,EAAED,IAAI,CAAC;MAEpE,MAAMI,QAAQ,GAAG,MAAMtD,cAAc,CAACuD,MAAM,CAACL,IAAI,EAAE,EAAE,EAAEC,MAAM,CAAC;MAC9DC,OAAO,CAACC,GAAG,CAAC,wBAAwB,EAAEC,QAAQ,CAAC;MAE/C,IAAIA,QAAQ,CAACnB,OAAO,KAAK,KAAK,EAAE;QAC9BD,QAAQ,CAACoB,QAAQ,CAACrB,KAAK,IAAI,0BAA0B,CAAC;QACtDT,WAAW,CAAC,EAAE,CAAC;MACjB,CAAC,MAAM;QACL;QACA,IAAI8B,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,IAAI,CAAC,EAAE;UACjDhC,WAAW,CAAC8B,QAAQ,CAACE,IAAI,CAAC;UAC1BhB,aAAa,CAACc,QAAQ,CAACf,UAAU,IAAIoB,IAAI,CAACC,IAAI,CAAC,CAACN,QAAQ,CAACO,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;UAC3E3B,QAAQ,CAAC,EAAE,CAAC;QACd,CAAC,MAAM,IAAIoB,QAAQ,CAACQ,IAAI,IAAIL,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACQ,IAAI,CAAC,EAAE;UACxDtC,WAAW,CAAC8B,QAAQ,CAACQ,IAAI,CAAC;UAC1BtB,aAAa,CAACmB,IAAI,CAACC,IAAI,CAAC,CAACN,QAAQ,CAACO,KAAK,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;UACpD3B,QAAQ,CAAC,EAAE,CAAC;QACd,CAAC,MAAM,IAAIuB,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;UAClC9B,WAAW,CAAC8B,QAAQ,CAAC;UACrBd,aAAa,CAACmB,IAAI,CAACC,IAAI,CAACN,QAAQ,CAACS,MAAM,GAAG,EAAE,CAAC,CAAC;UAC9C7B,QAAQ,CAAC,EAAE,CAAC;QACd,CAAC,MAAM;UACLV,WAAW,CAAC,EAAE,CAAC;UACfgB,aAAa,CAAC,CAAC,CAAC;UAChBN,QAAQ,CAAC,6CAA6C,CAAC;QACzD;MACF;MAEAI,cAAc,CAACY,IAAI,CAAC;IACtB,CAAC,CAAC,OAAOjB,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;MAChDC,QAAQ,CAAC,6CAA6C,CAAC;MACvDV,WAAW,CAAC,EAAE,CAAC;IACjB,CAAC,SAAS;MACRQ,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;;EAED;EACA,MAAMgC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;IACnC,IAAI;MACF,MAAMV,QAAQ,GAAG,MAAMrD,iBAAiB,CAACsD,MAAM,CAAC,CAAC,EAAE,GAAG,CAAC;MACvDH,OAAO,CAACC,GAAG,CAAC,2BAA2B,EAAEC,QAAQ,CAAC;MAElD,IAAIA,QAAQ,CAACnB,OAAO,KAAK,KAAK,EAAE;QAC9B,IAAImB,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,IAAI,CAAC,EAAE;UACjD9B,cAAc,CAAC4B,QAAQ,CAACE,IAAI,CAAC;QAC/B,CAAC,MAAM,IAAIF,QAAQ,CAACQ,IAAI,IAAIL,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACQ,IAAI,CAAC,EAAE;UACxDpC,cAAc,CAAC4B,QAAQ,CAACQ,IAAI,CAAC;QAC/B,CAAC,MAAM,IAAIL,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;UAClC5B,cAAc,CAAC4B,QAAQ,CAAC;QAC1B,CAAC,MAAM;UACL5B,cAAc,CAAC,EAAE,CAAC;QACpB;MACF,CAAC,MAAM;QACL0B,OAAO,CAACnB,KAAK,CAAC,8BAA8B,EAAEqB,QAAQ,CAACrB,KAAK,CAAC;QAC7DP,cAAc,CAAC,EAAE,CAAC;MACpB;IACF,CAAC,CAAC,OAAOO,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDP,cAAc,CAAC,EAAE,CAAC;IACpB;EACF,CAAC;;EAED;EACA,MAAMuC,iBAAiB,GAAG,MAAAA,CAAA,KAAY;IACpC,IAAI;MACF,MAAMX,QAAQ,GAAG,MAAMpD,kBAAkB,CAACqD,MAAM,CAAC,CAAC;MAClDH,OAAO,CAACC,GAAG,CAAC,6BAA6B,EAAEC,QAAQ,CAAC;MAEpD,IAAIA,QAAQ,CAACnB,OAAO,KAAK,KAAK,EAAE;QAC9B,IAAImB,QAAQ,CAACE,IAAI,IAAIC,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACE,IAAI,CAAC,EAAE;UACjD5B,eAAe,CAAC0B,QAAQ,CAACE,IAAI,CAAC;QAChC,CAAC,MAAM,IAAIF,QAAQ,CAACQ,IAAI,IAAIL,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAACQ,IAAI,CAAC,EAAE;UACxDlC,eAAe,CAAC0B,QAAQ,CAACQ,IAAI,CAAC;QAChC,CAAC,MAAM,IAAIL,KAAK,CAACC,OAAO,CAACJ,QAAQ,CAAC,EAAE;UAClC1B,eAAe,CAAC0B,QAAQ,CAAC;QAC3B,CAAC,MAAM;UACL1B,eAAe,CAAC,EAAE,CAAC;QACrB;MACF,CAAC,MAAM;QACLwB,OAAO,CAACnB,KAAK,CAAC,gCAAgC,EAAEqB,QAAQ,CAACrB,KAAK,CAAC;QAC/DL,eAAe,CAAC,EAAE,CAAC;MACrB;IACF,CAAC,CAAC,OAAOK,KAAK,EAAE;MACdmB,OAAO,CAACnB,KAAK,CAAC,+BAA+B,EAAEA,KAAK,CAAC;MACrDL,eAAe,CAAC,EAAE,CAAC;IACrB;EACF,CAAC;EAEDxC,SAAS,CAAC,MAAM;IACd6D,aAAa,CAAC,CAAC;IACfe,gBAAgB,CAAC,CAAC;IAClBC,iBAAiB,CAAC,CAAC;EACrB,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAGA,CAAC;IAAEf;EAAO,CAAC,KAAK;IACnCH,aAAa,CAACG,MAAM,CAAC;IACrBF,aAAa,CAAC,CAAC,EAAEE,MAAM,CAAC;EAC1B,CAAC;EAED,MAAMgB,gBAAgB,GAAIjB,IAAI,IAAK;IACjCD,aAAa,CAACC,IAAI,EAAEH,UAAU,CAAC;EACjC,CAAC;EAED,MAAMqB,UAAU,GAAIC,OAAO,IAAK;IAC9BzB,iBAAiB,CAACyB,OAAO,CAAC;IAC1B3B,cAAc,CAAC,IAAI,CAAC;EACtB,CAAC;EAED,MAAM4B,YAAY,GAAG,MAAOC,EAAE,IAAK;IACjC,IAAI;MACFvC,UAAU,CAAC,IAAI,CAAC;MAChB,MAAMhC,cAAc,CAACwE,MAAM,CAACD,EAAE,CAAC;MAC/BnC,UAAU,CAAC,8BAA8B,CAAC;MAC1Ca,aAAa,CAACZ,WAAW,EAAEU,UAAU,CAAC;MACtCD,gBAAgB,CAAC,IAAI,CAAC;IACxB,CAAC,CAAC,OAAOb,KAAK,EAAE;MAAA,IAAAwC,eAAA,EAAAC,oBAAA;MACdxC,QAAQ,CAAC,EAAAuC,eAAA,GAAAxC,KAAK,CAACqB,QAAQ,cAAAmB,eAAA,wBAAAC,oBAAA,GAAdD,eAAA,CAAgBjB,IAAI,cAAAkB,oBAAA,uBAApBA,oBAAA,CAAsBC,OAAO,KAAI,0BAA0B,CAAC;IACvE,CAAC,SAAS;MACR3C,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,MAAM4C,YAAY,GAAG,MAAAA,CAAOC,MAAM,EAAE;IAAEC,aAAa;IAAEC;EAAU,CAAC,KAAK;IACnE,IAAI;MACF/C,UAAU,CAAC,IAAI,CAAC;MAEhB,IAAIW,cAAc,EAAE;QAClB,MAAM3C,cAAc,CAACgF,MAAM,CAACrC,cAAc,CAAC4B,EAAE,EAAEM,MAAM,CAAC;QACtDzC,UAAU,CAAC,8BAA8B,CAAC;MAC5C,CAAC,MAAM;QACL,MAAMpC,cAAc,CAACiF,MAAM,CAACJ,MAAM,CAAC;QACnCzC,UAAU,CAAC,8BAA8B,CAAC;MAC5C;MAEA2C,SAAS,CAAC,CAAC;MACXrC,cAAc,CAAC,KAAK,CAAC;MACrBE,iBAAiB,CAAC,IAAI,CAAC;MACvBK,aAAa,CAACZ,WAAW,EAAEU,UAAU,CAAC;IACxC,CAAC,CAAC,OAAOd,KAAK,EAAE;MAAA,IAAAiD,gBAAA,EAAAC,qBAAA;MACdjD,QAAQ,CAAC,EAAAgD,gBAAA,GAAAjD,KAAK,CAACqB,QAAQ,cAAA4B,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgB1B,IAAI,cAAA2B,qBAAA,uBAApBA,qBAAA,CAAsBR,OAAO,KAAI,wBAAwB,CAAC;IACrE,CAAC,SAAS;MACR3C,UAAU,CAAC,KAAK,CAAC;MACjB8C,aAAa,CAAC,KAAK,CAAC;IACtB;EACF,CAAC;EAED,MAAMM,OAAO,GAAG,CACd;IAAEC,GAAG,EAAE,IAAI;IAAEC,KAAK,EAAE;EAAK,CAAC,EAC1B;IACED,GAAG,EAAE,cAAc;IACnBC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAGC,IAAI,IAAKA,IAAI,CAAC9E,YAAY,IAAI8E,IAAI,CAACC,IAAI,IAAI;EACtD,CAAC,EACD;IACEJ,GAAG,EAAE,iBAAiB;IACtBC,KAAK,EAAE,YAAY;IACnBC,MAAM,EAAGC,IAAI,IAAKA,IAAI,CAACE,eAAe,IAAI;EAC5C,CAAC,EACD;IACEL,GAAG,EAAE,cAAc;IACnBC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAGC,IAAI,IAAKA,IAAI,CAACG,YAAY,IAAIH,IAAI,CAACI,MAAM,IAAI;EACxD,CAAC,EACD;IACEP,GAAG,EAAE,mBAAmB;IACxBC,KAAK,EAAE,cAAc;IACrBC,MAAM,EAAGC,IAAI,IAAKA,IAAI,CAACK,iBAAiB,IAAI;EAC9C,CAAC,EACD;IACER,GAAG,EAAE,eAAe;IACpBC,KAAK,EAAE,UAAU;IACjBC,MAAM,EAAGC,IAAI,IAAKA,IAAI,CAACM,aAAa,IAAI;EAC1C,CAAC,CACF;EAED,oBACE1F,OAAA;IAAK2F,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxB5F,OAAA;MAAK2F,SAAS,EAAC,mCAAmC;MAAAC,QAAA,gBAChD5F,OAAA;QAAI2F,SAAS,EAAC,sCAAsC;QAAAC,QAAA,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAClEhG,OAAA;QACEiG,OAAO,EAAEA,CAAA,KAAM;UACbzD,iBAAiB,CAAC,IAAI,CAAC;UACvBF,cAAc,CAAC,IAAI,CAAC;QACtB,CAAE;QACFqD,SAAS,EAAC,aAAa;QAAAC,QAAA,EACxB;MAED;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,EAELnE,KAAK,iBACJ7B,OAAA,CAACN,KAAK;MACJwG,IAAI,EAAC,OAAO;MACZ3B,OAAO,EAAE1C,KAAM;MACfsE,OAAO,EAAEA,CAAA,KAAMrE,QAAQ,CAAC,EAAE;IAAE;MAAA+D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC7B,CACF,EAEAjE,OAAO,iBACN/B,OAAA,CAACN,KAAK;MACJwG,IAAI,EAAC,SAAS;MACd3B,OAAO,EAAExC,OAAQ;MACjBoE,OAAO,EAAEA,CAAA,KAAMnE,UAAU,CAAC,EAAE;IAAE;MAAA6D,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC/B,CACF,eAEDhG,OAAA,CAACR,YAAY;MAAC4G,QAAQ,EAAEtC;IAAa;MAAA+B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,EAEvCrE,OAAO,IAAI,CAACR,QAAQ,CAACwC,MAAM,gBAC1B3D,OAAA;MAAK2F,SAAS,EAAC,uCAAuC;MAAAC,QAAA,eACpD5F,OAAA,CAACL,cAAc;QAAC0G,IAAI,EAAC;MAAI;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,gBAENhG,OAAA,CAAAE,SAAA;MAAA0F,QAAA,gBACE5F,OAAA;QAAK2F,SAAS,EAAC,+CAA+C;QAAAC,QAAA,eAC5D5F,OAAA,CAACV,KAAK;UACJ0F,OAAO,EAAEA,OAAQ;UACjB5B,IAAI,EAAEjC,QAAS;UACfmF,OAAO,EAAE,IAAK;UACdC,MAAM,EAAEvC,UAAW;UACnBwC,QAAQ,EAAGvC,OAAO,IAAKvB,gBAAgB,CAACuB,OAAO;QAAE;UAAA4B,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClD;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,EAEL7D,UAAU,GAAG,CAAC,iBACbnC,OAAA,CAACT,UAAU;QACT0C,WAAW,EAAEA,WAAY;QACzBE,UAAU,EAAEA,UAAW;QACvBsE,YAAY,EAAE1C;MAAiB;QAAA8B,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChC,CACF;IAAA,eACD,CACH,eAGDhG,OAAA,CAACP,KAAK;MACJiH,MAAM,EAAErE,WAAY;MACpB8D,OAAO,EAAEA,CAAA,KAAM7D,cAAc,CAAC,KAAK,CAAE;MACrCqE,KAAK,EAAEpE,cAAc,GAAG,cAAc,GAAG,aAAc;MAAAqD,QAAA,eAEvD5F,OAAA,CAACf,MAAM;QACL2H,aAAa,EAAE;UACbtG,YAAY,EAAE,CAAAiC,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEjC,YAAY,MAAIiC,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE8C,IAAI,KAAI,EAAE;UACxE1E,aAAa,EAAE,CAAA4B,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAE5B,aAAa,KAAI,EAAE;UAClDG,SAAS,EAAE,CAAAyB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAEzB,SAAS,KAAI,EAAE;UAC1CC,eAAe,EAAE,CAAAwB,cAAc,aAAdA,cAAc,uBAAdA,cAAc,CAAExB,eAAe,KAAI;QACtD,CAAE;QACF8F,gBAAgB,EAAE1G,aAAc;QAChC2G,QAAQ,EAAEtC,YAAa;QAAAoB,QAAA,EAEtBA,CAAC;UAAEmB;QAAa,CAAC,kBAChB/G,OAAA,CAACd,IAAI;UAACyG,SAAS,EAAC,WAAW;UAAAC,QAAA,gBACzB5F,OAAA;YAAA4F,QAAA,gBACE5F,OAAA;cAAOgH,OAAO,EAAC,cAAc;cAACrB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAErD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACRhG,OAAA,CAACb,KAAK;cACJ+G,IAAI,EAAC,MAAM;cACX/B,EAAE,EAAC,cAAc;cACjBkB,IAAI,EAAC,cAAc;cACnBM,SAAS,EAAC,YAAY;cACtBsB,WAAW,EAAC;YAAwB;cAAApB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACrC,CAAC,eACFhG,OAAA,CAACZ,YAAY;cACXiG,IAAI,EAAC,cAAc;cACnB6B,SAAS,EAAC,KAAK;cACfvB,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENhG,OAAA;YAAA4F,QAAA,gBACE5F,OAAA;cAAOgH,OAAO,EAAC,eAAe;cAACrB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAEtD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACRhG,OAAA,CAACb,KAAK;cACJgI,EAAE,EAAC,QAAQ;cACXhD,EAAE,EAAC,eAAe;cAClBkB,IAAI,EAAC,eAAe;cACpBM,SAAS,EAAC,YAAY;cAAAC,QAAA,gBAEtB5F,OAAA;gBAAQoH,KAAK,EAAC,EAAE;gBAAAxB,QAAA,EAAC;cAAiB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC1C3E,WAAW,CAACgG,GAAG,CAAEC,IAAI,iBACpBtH,OAAA;gBAAsBoH,KAAK,EAAEE,IAAI,CAACnD,EAAG;gBAAAyB,QAAA,EAClC0B,IAAI,CAAChC,eAAe,IAAIgC,IAAI,CAACjC;cAAI,GADvBiC,IAAI,CAACnD,EAAE;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEZ,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRhG,OAAA,CAACZ,YAAY;cACXiG,IAAI,EAAC,eAAe;cACpB6B,SAAS,EAAC,KAAK;cACfvB,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENhG,OAAA;YAAA4F,QAAA,gBACE5F,OAAA;cAAOgH,OAAO,EAAC,WAAW;cAACrB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAElD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACRhG,OAAA,CAACb,KAAK;cACJgI,EAAE,EAAC,QAAQ;cACXhD,EAAE,EAAC,WAAW;cACdkB,IAAI,EAAC,WAAW;cAChBM,SAAS,EAAC,YAAY;cAAAC,QAAA,gBAEtB5F,OAAA;gBAAQoH,KAAK,EAAC,EAAE;gBAAAxB,QAAA,EAAC;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC5CzE,YAAY,CAAC8F,GAAG,CAAE7B,MAAM,iBACvBxF,OAAA;gBAAwBoH,KAAK,EAAE5B,MAAM,CAACrB,EAAG;gBAAAyB,QAAA,EACtCJ,MAAM,CAACA,MAAM,IAAIA,MAAM,CAACH;cAAI,GADlBG,MAAM,CAACrB,EAAE;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEd,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRhG,OAAA,CAACZ,YAAY;cACXiG,IAAI,EAAC,WAAW;cAChB6B,SAAS,EAAC,KAAK;cACfvB,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENhG,OAAA;YAAA4F,QAAA,gBACE5F,OAAA;cAAOgH,OAAO,EAAC,iBAAiB;cAACrB,SAAS,EAAC,YAAY;cAAAC,QAAA,EAAC;YAExD;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAO,CAAC,eACRhG,OAAA,CAACb,KAAK;cACJgI,EAAE,EAAC,QAAQ;cACXhD,EAAE,EAAC,iBAAiB;cACpBkB,IAAI,EAAC,iBAAiB;cACtBM,SAAS,EAAC,YAAY;cAAAC,QAAA,gBAEtB5F,OAAA;gBAAQoH,KAAK,EAAC,EAAE;gBAAAxB,QAAA,EAAC;cAAmB;gBAAAC,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,EAC5C7E,QAAQ,CAACkG,GAAG,CAAEpD,OAAO,iBACpBjE,OAAA;gBAAyBoH,KAAK,EAAEnD,OAAO,CAACE,EAAG;gBAAAyB,QAAA,EACxC3B,OAAO,CAAC3D,YAAY,IAAI2D,OAAO,CAACoB;cAAI,GAD1BpB,OAAO,CAACE,EAAE;gBAAA0B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAEf,CACT,CAAC;YAAA;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACG,CAAC,eACRhG,OAAA,CAACZ,YAAY;cACXiG,IAAI,EAAC,iBAAiB;cACtB6B,SAAS,EAAC,KAAK;cACfvB,SAAS,EAAC;YAAY;cAAAE,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACvB,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENhG,OAAA;YAAK2F,SAAS,EAAC,iCAAiC;YAAAC,QAAA,gBAC9C5F,OAAA;cACEkG,IAAI,EAAC,QAAQ;cACbD,OAAO,EAAEA,CAAA,KAAM3D,cAAc,CAAC,KAAK,CAAE;cACrCqD,SAAS,EAAC,eAAe;cAAAC,QAAA,EAC1B;YAED;cAAAC,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAQ,CAAC,eACThG,OAAA;cACEkG,IAAI,EAAC,QAAQ;cACbqB,QAAQ,EAAER,YAAY,IAAIpF,OAAQ;cAClCgE,SAAS,EAAC,aAAa;cAAAC,QAAA,EAEtBjE,OAAO,gBAAG3B,OAAA,CAACL,cAAc;gBAAC0G,IAAI,EAAC,IAAI;gBAACmB,KAAK,EAAC;cAAO;gBAAA3B,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAE,CAAC,GAAG;YAAM;cAAAH,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACxD,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACN,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF;MACP;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACK;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACJ,CAAC,eAGRhG,OAAA,CAACP,KAAK;MACJiH,MAAM,EAAE,CAAC,CAACjE,aAAc;MACxB0D,OAAO,EAAEA,CAAA,KAAMzD,gBAAgB,CAAC,IAAI,CAAE;MACtCiE,KAAK,EAAC,gBAAgB;MACtBN,IAAI,EAAC,IAAI;MAAAT,QAAA,eAET5F,OAAA;QAAK2F,SAAS,EAAC,WAAW;QAAAC,QAAA,gBACxB5F,OAAA;UAAA4F,QAAA,GAAG,gDAC4C,EAAC,CAAAnD,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAEnC,YAAY,MAAImC,aAAa,aAAbA,aAAa,uBAAbA,aAAa,CAAE4C,IAAI,GAAC,mCAEnG;QAAA;UAAAQ,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAG,CAAC,eACJhG,OAAA;UAAK2F,SAAS,EAAC,iCAAiC;UAAAC,QAAA,gBAC9C5F,OAAA;YACEkG,IAAI,EAAC,QAAQ;YACbD,OAAO,EAAEA,CAAA,KAAMvD,gBAAgB,CAAC,IAAI,CAAE;YACtCiD,SAAS,EAAC,eAAe;YAAAC,QAAA,EAC1B;UAED;YAAAC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,eACThG,OAAA;YACEkG,IAAI,EAAC,QAAQ;YACbD,OAAO,EAAEA,CAAA,KAAM/B,YAAY,CAACzB,aAAa,CAAC0B,EAAE,CAAE;YAC9CwB,SAAS,EAAC,YAAY;YAAAC,QAAA,EAErBjE,OAAO,gBAAG3B,OAAA,CAACL,cAAc;cAAC0G,IAAI,EAAC,IAAI;cAACmB,KAAK,EAAC;YAAO;cAAA3B,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,GAAG;UAAQ;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAC1D,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACN,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACH;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEV,CAAC;AAAC9E,EAAA,CAnaID,QAAQ;AAAAwG,EAAA,GAARxG,QAAQ;AAqad,eAAeA,QAAQ;AAAC,IAAAwG,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}