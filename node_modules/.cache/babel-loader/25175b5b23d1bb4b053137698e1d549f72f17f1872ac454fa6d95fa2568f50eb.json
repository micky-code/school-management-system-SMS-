{"ast":null,"code":"import ApiAdapter from './api-adapter';\n\n// Keep the original api import for backward compatibility during transition\nimport api from './api';\nconst BATCH_URL = '/batches';\nconst BatchService = {\n  getAll: async (page = 1, limit = 10, search = '', programId = '', academicYearId = '') => {\n    try {\n      // Use ApiAdapter for better compatibility with both backends\n      return await ApiAdapter.batches.getAll(page, limit, search);\n    } catch (error) {\n      console.error('Error fetching batches:', error);\n      // Return a default structure to prevent UI crashes\n      return {\n        success: false,\n        count: 0,\n        totalPages: 1,\n        currentPage: page,\n        data: [],\n        error: error.message || 'Failed to fetch batches'\n      };\n    }\n  },\n  getById: async id => {\n    try {\n      return await ApiAdapter.batches.getById(id);\n    } catch (error) {\n      console.error('Error fetching batch:', error);\n      throw error;\n    }\n  },\n  getByProgram: async programId => {\n    try {\n      // Use ApiAdapter for better compatibility with both backends\n      if (ApiAdapter.batches.getByProgram) {\n        return await ApiAdapter.batches.getByProgram(programId);\n      } else {\n        // Fallback to original API if adapter doesn't support this method yet\n        const response = await api.get(`${BATCH_URL}/program/${programId}`);\n        return response.data;\n      }\n    } catch (error) {\n      console.error('Error fetching batches by program:', error);\n      throw error;\n    }\n  },\n  create: async batchData => {\n    try {\n      return await ApiAdapter.batches.create(batchData);\n    } catch (error) {\n      console.error('Error creating batch:', error);\n      throw error;\n    }\n  },\n  update: async (id, batchData) => {\n    try {\n      return await ApiAdapter.batches.update(id, batchData);\n    } catch (error) {\n      console.error('Error updating batch:', error);\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      return await ApiAdapter.batches.delete(id);\n    } catch (error) {\n      console.error('Error deleting batch:', error);\n      throw error;\n    }\n  }\n};\nexport default BatchService;","map":{"version":3,"names":["ApiAdapter","api","BATCH_URL","BatchService","getAll","page","limit","search","programId","academicYearId","batches","error","console","success","count","totalPages","currentPage","data","message","getById","id","getByProgram","response","get","create","batchData","update","delete"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/services/batch.service.js"],"sourcesContent":["import ApiAdapter from './api-adapter';\n\n// Keep the original api import for backward compatibility during transition\nimport api from './api';\n\nconst BATCH_URL = '/batches';\n\nconst BatchService = {\n  getAll: async (page = 1, limit = 10, search = '', programId = '', academicYearId = '') => {\n    try {\n      // Use ApiAdapter for better compatibility with both backends\n      return await ApiAdapter.batches.getAll(page, limit, search);\n    } catch (error) {\n      console.error('Error fetching batches:', error);\n      // Return a default structure to prevent UI crashes\n      return {\n        success: false,\n        count: 0,\n        totalPages: 1,\n        currentPage: page,\n        data: [],\n        error: error.message || 'Failed to fetch batches'\n      };\n    }\n  },\n\n  getById: async (id) => {\n    try {\n      return await ApiAdapter.batches.getById(id);\n    } catch (error) {\n      console.error('Error fetching batch:', error);\n      throw error;\n    }\n  },\n\n  getByProgram: async (programId) => {\n    try {\n      // Use ApiAdapter for better compatibility with both backends\n      if (ApiAdapter.batches.getByProgram) {\n        return await ApiAdapter.batches.getByProgram(programId);\n      } else {\n        // Fallback to original API if adapter doesn't support this method yet\n        const response = await api.get(`${BATCH_URL}/program/${programId}`);\n        return response.data;\n      }\n    } catch (error) {\n      console.error('Error fetching batches by program:', error);\n      throw error;\n    }\n  },\n\n  create: async (batchData) => {\n    try {\n      return await ApiAdapter.batches.create(batchData);\n    } catch (error) {\n      console.error('Error creating batch:', error);\n      throw error;\n    }\n  },\n\n  update: async (id, batchData) => {\n    try {\n      return await ApiAdapter.batches.update(id, batchData);\n    } catch (error) {\n      console.error('Error updating batch:', error);\n      throw error;\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      return await ApiAdapter.batches.delete(id);\n    } catch (error) {\n      console.error('Error deleting batch:', error);\n      throw error;\n    }\n  }\n};\n\nexport default BatchService;\n"],"mappings":"AAAA,OAAOA,UAAU,MAAM,eAAe;;AAEtC;AACA,OAAOC,GAAG,MAAM,OAAO;AAEvB,MAAMC,SAAS,GAAG,UAAU;AAE5B,MAAMC,YAAY,GAAG;EACnBC,MAAM,EAAE,MAAAA,CAAOC,IAAI,GAAG,CAAC,EAAEC,KAAK,GAAG,EAAE,EAAEC,MAAM,GAAG,EAAE,EAAEC,SAAS,GAAG,EAAE,EAAEC,cAAc,GAAG,EAAE,KAAK;IACxF,IAAI;MACF;MACA,OAAO,MAAMT,UAAU,CAACU,OAAO,CAACN,MAAM,CAACC,IAAI,EAAEC,KAAK,EAAEC,MAAM,CAAC;IAC7D,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/C;MACA,OAAO;QACLE,OAAO,EAAE,KAAK;QACdC,KAAK,EAAE,CAAC;QACRC,UAAU,EAAE,CAAC;QACbC,WAAW,EAAEX,IAAI;QACjBY,IAAI,EAAE,EAAE;QACRN,KAAK,EAAEA,KAAK,CAACO,OAAO,IAAI;MAC1B,CAAC;IACH;EACF,CAAC;EAEDC,OAAO,EAAE,MAAOC,EAAE,IAAK;IACrB,IAAI;MACF,OAAO,MAAMpB,UAAU,CAACU,OAAO,CAACS,OAAO,CAACC,EAAE,CAAC;IAC7C,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDU,YAAY,EAAE,MAAOb,SAAS,IAAK;IACjC,IAAI;MACF;MACA,IAAIR,UAAU,CAACU,OAAO,CAACW,YAAY,EAAE;QACnC,OAAO,MAAMrB,UAAU,CAACU,OAAO,CAACW,YAAY,CAACb,SAAS,CAAC;MACzD,CAAC,MAAM;QACL;QACA,MAAMc,QAAQ,GAAG,MAAMrB,GAAG,CAACsB,GAAG,CAAC,GAAGrB,SAAS,YAAYM,SAAS,EAAE,CAAC;QACnE,OAAOc,QAAQ,CAACL,IAAI;MACtB;IACF,CAAC,CAAC,OAAON,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,oCAAoC,EAAEA,KAAK,CAAC;MAC1D,MAAMA,KAAK;IACb;EACF,CAAC;EAEDa,MAAM,EAAE,MAAOC,SAAS,IAAK;IAC3B,IAAI;MACF,OAAO,MAAMzB,UAAU,CAACU,OAAO,CAACc,MAAM,CAACC,SAAS,CAAC;IACnD,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDe,MAAM,EAAE,MAAAA,CAAON,EAAE,EAAEK,SAAS,KAAK;IAC/B,IAAI;MACF,OAAO,MAAMzB,UAAU,CAACU,OAAO,CAACgB,MAAM,CAACN,EAAE,EAAEK,SAAS,CAAC;IACvD,CAAC,CAAC,OAAOd,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF,CAAC;EAEDgB,MAAM,EAAE,MAAOP,EAAE,IAAK;IACpB,IAAI;MACF,OAAO,MAAMpB,UAAU,CAACU,OAAO,CAACiB,MAAM,CAACP,EAAE,CAAC;IAC5C,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,uBAAuB,EAAEA,KAAK,CAAC;MAC7C,MAAMA,KAAK;IACb;EACF;AACF,CAAC;AAED,eAAeR,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}