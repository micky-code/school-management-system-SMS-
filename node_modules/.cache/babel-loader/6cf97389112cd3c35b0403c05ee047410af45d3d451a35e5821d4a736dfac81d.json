{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sms-frontend-clone\\\\src\\\\components\\\\DashboardConnectionStatus.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n/**\n * Dashboard Connection Status Component\n * Displays API connection status (real-time features removed)\n */\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DashboardConnectionStatus = ({\n  onConnectionChange,\n  autoRefreshInterval = 30\n}) => {\n  _s();\n  const [connectionStatus, setConnectionStatus] = useState({\n    apiConnected: false,\n    directDbConnected: false\n  });\n\n  // Function to check direct database connection via API health endpoint\n  const checkDirectDbConnection = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/health/database', {\n        timeout: 5000 // 5 second timeout\n      });\n      const isConnected = response.data && response.data.success;\n      setConnectionStatus(prev => ({\n        ...prev,\n        directDbConnected: isConnected\n      }));\n      return isConnected;\n    } catch (error) {\n      console.error('Direct DB connection check failed:', error);\n      setConnectionStatus(prev => ({\n        ...prev,\n        directDbConnected: false\n      }));\n      return false;\n    }\n  };\n\n  // Function to check Node.js API connection\n  const checkApiConnection = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/health', {\n        timeout: 5000 // 5 second timeout\n      });\n      const isConnected = response.status === 200;\n      setConnectionStatus(prev => ({\n        ...prev,\n        apiConnected: isConnected\n      }));\n      return isConnected;\n    } catch (error) {\n      console.error('API connection check failed:', error);\n      setConnectionStatus(prev => ({\n        ...prev,\n        apiConnected: false\n      }));\n      return false;\n    }\n  };\n  useEffect(() => {\n    // Check direct database and API connections immediately\n    checkDirectDbConnection();\n    checkApiConnection();\n\n    // Set up interval to check connections periodically\n    const connectionCheckInterval = setInterval(() => {\n      checkDirectDbConnection();\n      checkApiConnection();\n    }, 30000); // Check every 30 seconds\n\n    // Notify parent component of initial connection status\n    if (onConnectionChange) {\n      onConnectionChange({\n        connected: false,\n        polling: true\n      });\n    }\n    return () => {\n      // Clean up on component unmount\n      clearInterval(connectionCheckInterval);\n    };\n  }, [onConnectionChange]);\n\n  // Handle refresh button click\n  const handleRefresh = () => {\n    checkDirectDbConnection();\n    checkApiConnection();\n    toast.info('Checking API connections...', {\n      autoClose: 3000,\n      position: 'bottom-right'\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"flex flex-col space-y-2 p-3 bg-white rounded-lg shadow-sm border border-gray-100\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status-container grid grid-cols-1 md:grid-cols-2 gap-2\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${connectionStatus.directDbConnected ? 'bg-green-500' : 'bg-red-500'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: [\"Direct DB: \", connectionStatus.directDbConnected ? 'Online' : 'Offline']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex items-center space-x-2\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: `w-3 h-3 rounded-full ${connectionStatus.apiConnected ? 'bg-green-500' : 'bg-red-500'}`\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"text-sm font-medium text-gray-700\",\n          children: [\"API: \", connectionStatus.apiConnected ? 'Online' : 'Offline']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"actions-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRefresh,\n        className: \"text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\",\n        children: \"Refresh Status\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 132,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n};\n_s(DashboardConnectionStatus, \"NYQG2H0fXJPfx9cCWW0aefZ/QYg=\");\n_c = DashboardConnectionStatus;\nexport default DashboardConnectionStatus;\nvar _c;\n$RefreshReg$(_c, \"DashboardConnectionStatus\");","map":{"version":3,"names":["React","useState","useEffect","axios","toast","jsxDEV","_jsxDEV","DashboardConnectionStatus","onConnectionChange","autoRefreshInterval","_s","connectionStatus","setConnectionStatus","apiConnected","directDbConnected","checkDirectDbConnection","response","get","timeout","isConnected","data","success","prev","error","console","checkApiConnection","status","connectionCheckInterval","setInterval","connected","polling","clearInterval","handleRefresh","info","autoClose","position","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/components/DashboardConnectionStatus.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\n\n/**\n * Dashboard Connection Status Component\n * Displays API connection status (real-time features removed)\n */\nconst DashboardConnectionStatus = ({ onConnectionChange, autoRefreshInterval = 30 }) => {\n  const [connectionStatus, setConnectionStatus] = useState({\n    apiConnected: false,\n    directDbConnected: false\n  });\n\n  // Function to check direct database connection via API health endpoint\n  const checkDirectDbConnection = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/health/database', {\n        timeout: 5000 // 5 second timeout\n      });\n      \n      const isConnected = response.data && response.data.success;\n      \n      setConnectionStatus(prev => ({\n        ...prev,\n        directDbConnected: isConnected\n      }));\n      \n      return isConnected;\n    } catch (error) {\n      console.error('Direct DB connection check failed:', error);\n      setConnectionStatus(prev => ({\n        ...prev,\n        directDbConnected: false\n      }));\n      return false;\n    }\n  };\n  \n  // Function to check Node.js API connection\n  const checkApiConnection = async () => {\n    try {\n      const response = await axios.get('http://localhost:5000/api/health', {\n        timeout: 5000 // 5 second timeout\n      });\n      \n      const isConnected = response.status === 200;\n      \n      setConnectionStatus(prev => ({\n        ...prev,\n        apiConnected: isConnected\n      }));\n      \n      return isConnected;\n    } catch (error) {\n      console.error('API connection check failed:', error);\n      setConnectionStatus(prev => ({\n        ...prev,\n        apiConnected: false\n      }));\n      return false;\n    }\n  };\n\n  useEffect(() => {\n    // Check direct database and API connections immediately\n    checkDirectDbConnection();\n    checkApiConnection();\n    \n    // Set up interval to check connections periodically\n    const connectionCheckInterval = setInterval(() => {\n      checkDirectDbConnection();\n      checkApiConnection();\n    }, 30000); // Check every 30 seconds\n    \n    // Notify parent component of initial connection status\n    if (onConnectionChange) {\n      onConnectionChange({ connected: false, polling: true });\n    }\n\n    return () => {\n      // Clean up on component unmount\n      clearInterval(connectionCheckInterval);\n    };\n  }, [onConnectionChange]);\n\n\n  // Handle refresh button click\n  const handleRefresh = () => {\n    checkDirectDbConnection();\n    checkApiConnection();\n    \n    toast.info('Checking API connections...', {\n      autoClose: 3000,\n      position: 'bottom-right'\n    });\n  };\n\n  return (\n    <div className=\"flex flex-col space-y-2 p-3 bg-white rounded-lg shadow-sm border border-gray-100\">\n      <div className=\"status-container grid grid-cols-1 md:grid-cols-2 gap-2\">\n        {/* Direct DB Connection Status */}\n        <div className=\"flex items-center space-x-2\">\n          <div\n            className={`w-3 h-3 rounded-full ${\n              connectionStatus.directDbConnected \n                ? 'bg-green-500' \n                : 'bg-red-500'\n            }`}\n          />\n          <span className=\"text-sm font-medium text-gray-700\">\n            Direct DB: {connectionStatus.directDbConnected ? 'Online' : 'Offline'}\n          </span>\n        </div>\n        \n        {/* API Connection Status */}\n        <div className=\"flex items-center space-x-2\">\n          <div\n            className={`w-3 h-3 rounded-full ${\n              connectionStatus.apiConnected \n                ? 'bg-green-500' \n                : 'bg-red-500'\n            }`}\n          />\n          <span className=\"text-sm font-medium text-gray-700\">\n            API: {connectionStatus.apiConnected ? 'Online' : 'Offline'}\n          </span>\n        </div>\n      </div>\n      \n      <div className=\"actions-container\">\n        <button\n          onClick={handleRefresh}\n          className=\"text-xs px-2 py-1 bg-blue-100 text-blue-700 rounded hover:bg-blue-200 transition-colors\"\n        >\n          Refresh Status\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default DashboardConnectionStatus;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}