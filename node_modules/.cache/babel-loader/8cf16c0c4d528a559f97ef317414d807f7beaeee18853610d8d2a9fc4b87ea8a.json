{"ast":null,"code":"var _jsxFileName = \"C:\\\\xampp\\\\htdocs\\\\sms-frontend-clone\\\\src\\\\pages\\\\auth\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useAuth } from '../../context/AuthContext';\nimport Alert from '../../components/common/Alert';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport FullPageLoader from '../../components/common/FullPageLoader';\nimport DatabaseErrorHandler from '../../components/DatabaseErrorHandler';\nimport SPILogo from '../../assets/images/SPI-logo-landscape.png';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string().required('Username is required'),\n  password: Yup.string().required('Password is required')\n});\nconst Login = () => {\n  _s();\n  const {\n    login,\n    currentUser\n  } = useAuth();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [errorType, setErrorType] = useState('general');\n\n  // Check if user is already logged in\n  React.useEffect(() => {\n    if (currentUser) {\n      // Get the redirect URL if it exists\n      const redirectUrl = sessionStorage.getItem('redirectUrl');\n      if (redirectUrl) {\n        console.log('User already logged in, redirecting to saved URL:', redirectUrl);\n        sessionStorage.removeItem('redirectUrl'); // Clear it after use\n        navigate(redirectUrl, {\n          replace: true\n        });\n      } else {\n        var _currentUser$role;\n        // User is already logged in, redirect to appropriate dashboard\n        // Make sure we use a valid role (admin, teacher, student, parent)\n        const validRoles = ['admin', 'teacher', 'student', 'parent'];\n        let role = ((_currentUser$role = currentUser.role) === null || _currentUser$role === void 0 ? void 0 : _currentUser$role.toLowerCase()) || '';\n\n        // If role is not valid, default to admin\n        if (!validRoles.includes(role)) {\n          console.log(`Invalid role detected: ${role}, defaulting to admin`);\n          role = 'admin';\n        }\n        const dashboardPath = `/${role}/dashboard`;\n        console.log('User already logged in, redirecting to', dashboardPath);\n        navigate(dashboardPath, {\n          replace: true\n        });\n      }\n    }\n  }, [currentUser, navigate]);\n  const [loading, setLoading] = useState(false);\n  const handleSubmit = async (values, {\n    setSubmitting\n  }) => {\n    try {\n      setLoading(true);\n      setError('');\n      setErrorType('general');\n\n      // Clear any existing auth data before login\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n\n      // Attempt login\n      const user = await login(values.username, values.password);\n\n      // Get the redirect URL if it exists\n      const redirectUrl = sessionStorage.getItem('redirectUrl');\n      console.log('Redirect URL after login:', redirectUrl);\n\n      // Short delay to ensure localStorage is updated before navigation\n      setTimeout(() => {\n        // Get role and convert to lowercase for consistency\n        const role = (user.role || '').toLowerCase();\n        console.log('User authenticated with role:', role);\n\n        // Navigate based on saved redirect URL or role\n        if (redirectUrl) {\n          console.log('Redirecting to previously attempted URL:', redirectUrl);\n          sessionStorage.removeItem('redirectUrl'); // Clear it after use\n          navigate(redirectUrl, {\n            replace: true\n          });\n        } else if (role === 'admin') {\n          navigate('/admin/dashboard', {\n            replace: true\n          });\n        } else if (role === 'teacher') {\n          navigate('/teacher/dashboard', {\n            replace: true\n          });\n        } else if (role === 'student') {\n          navigate('/student/dashboard', {\n            replace: true\n          });\n        } else if (role === 'parent') {\n          navigate('/parent/dashboard', {\n            replace: true\n          });\n        } else {\n          // Default to admin dashboard if role is not recognized\n          console.log('Unrecognized role, defaulting to admin dashboard');\n          navigate('/admin/dashboard', {\n            replace: true\n          });\n        }\n      }, 100); // Small delay to ensure localStorage is updated\n    } catch (error) {\n      var _error$message, _error$response, _error$response$data, _error$response$data$, _error$message2, _error$response2;\n      console.error('Login error:', error);\n\n      // Detect specific error types\n      if ((_error$message = error.message) !== null && _error$message !== void 0 && _error$message.includes('Too many connections') || (_error$response = error.response) !== null && _error$response !== void 0 && (_error$response$data = _error$response.data) !== null && _error$response$data !== void 0 && (_error$response$data$ = _error$response$data.message) !== null && _error$response$data$ !== void 0 && _error$response$data$.includes('Too many connections')) {\n        setErrorType('tooManyConnections');\n      } else if ((_error$message2 = error.message) !== null && _error$message2 !== void 0 && _error$message2.includes('expired') || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n        setErrorType('authError');\n      } else {\n        setErrorType('general');\n      }\n      setError(error);\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n  const handleRetry = () => {\n    // Clear errors and allow user to try again\n    setError('');\n    setErrorType('general');\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [loading && /*#__PURE__*/_jsxDEV(FullPageLoader, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"flex justify-center\",\n          children: /*#__PURE__*/_jsxDEV(\"img\", {\n            src: SPILogo,\n            alt: \"SPI Logo\",\n            className: \"h-24 w-auto mb-4\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n            className: \"mt-2 text-center text-3xl font-extrabold text-gray-900\",\n            children: \"Sign in to your account\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            className: \"mt-2 text-center text-sm text-gray-600\",\n            children: \"Student Management System\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 9\n        }, this), error && /*#__PURE__*/_jsxDEV(DatabaseErrorHandler, {\n          error: error,\n          errorType: errorType,\n          onRetry: handleRetry\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Formik, {\n          initialValues: {\n            username: '',\n            password: ''\n          },\n          validationSchema: LoginSchema,\n          onSubmit: handleSubmit,\n          children: ({\n            isSubmitting\n          }) => /*#__PURE__*/_jsxDEV(Form, {\n            className: \"mt-8 space-y-6\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"rounded-md shadow-sm -space-y-px\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"username\",\n                  className: \"sr-only\",\n                  children: \"Username\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"username\",\n                  name: \"username\",\n                  type: \"text\",\n                  autoComplete: \"username\",\n                  className: \"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\",\n                  placeholder: \"Username (your name)\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"username\",\n                  component: \"div\",\n                  className: \"text-red-500 text-xs mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  htmlFor: \"password\",\n                  className: \"sr-only\",\n                  children: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Field, {\n                  id: \"password\",\n                  name: \"password\",\n                  type: \"password\",\n                  autoComplete: \"current-password\",\n                  className: \"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\",\n                  placeholder: \"Password\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  name: \"password\",\n                  component: \"div\",\n                  className: \"text-red-500 text-xs mt-1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"flex items-center justify-between\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"text-sm\",\n                children: /*#__PURE__*/_jsxDEV(Link, {\n                  to: \"/forgot-password\",\n                  className: \"font-medium text-blue-600 hover:text-blue-500\",\n                  children: \"Forgot your password?\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                type: \"submit\",\n                disabled: isSubmitting || loading,\n                className: \"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-blue-300\",\n                children: loading ? /*#__PURE__*/_jsxDEV(LoadingSpinner, {\n                  size: \"sm\",\n                  color: \"white\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 217,\n                  columnNumber: 21\n                }, this) : 'Sign in'\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(Login, \"h+XvaxLcXAmHyo3VVT9G/Ek77I0=\", false, function () {\n  return [useAuth, useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","useNavigate","Link","Formik","Form","Field","ErrorMessage","Yup","useAuth","Alert","LoadingSpinner","FullPageLoader","DatabaseErrorHandler","SPILogo","jsxDEV","_jsxDEV","Fragment","_Fragment","LoginSchema","object","shape","username","string","required","password","Login","_s","login","currentUser","navigate","error","setError","errorType","setErrorType","useEffect","redirectUrl","sessionStorage","getItem","console","log","removeItem","replace","_currentUser$role","validRoles","role","toLowerCase","includes","dashboardPath","loading","setLoading","handleSubmit","values","setSubmitting","localStorage","user","setTimeout","_error$message","_error$response","_error$response$data","_error$response$data$","_error$message2","_error$response2","message","response","data","status","handleRetry","children","fileName","_jsxFileName","lineNumber","columnNumber","className","src","alt","onRetry","initialValues","validationSchema","onSubmit","isSubmitting","htmlFor","id","name","type","autoComplete","placeholder","component","to","disabled","size","color","_c","$RefreshReg$"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/pages/auth/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate, Link } from 'react-router-dom';\nimport { Formik, Form, Field, ErrorMessage } from 'formik';\nimport * as Yup from 'yup';\nimport { useAuth } from '../../context/AuthContext';\nimport Alert from '../../components/common/Alert';\nimport LoadingSpinner from '../../components/common/LoadingSpinner';\nimport FullPageLoader from '../../components/common/FullPageLoader';\nimport DatabaseErrorHandler from '../../components/DatabaseErrorHandler';\nimport SPILogo from '../../assets/images/SPI-logo-landscape.png';\n\nconst LoginSchema = Yup.object().shape({\n  username: Yup.string()\n    .required('Username is required'),\n  password: Yup.string()\n    .required('Password is required')\n});\n\nconst Login = () => {\n  const { login, currentUser } = useAuth();\n  const navigate = useNavigate();\n  const [error, setError] = useState('');\n  const [errorType, setErrorType] = useState('general');\n  \n  // Check if user is already logged in\n  React.useEffect(() => {\n    if (currentUser) {\n      // Get the redirect URL if it exists\n      const redirectUrl = sessionStorage.getItem('redirectUrl');\n      \n      if (redirectUrl) {\n        console.log('User already logged in, redirecting to saved URL:', redirectUrl);\n        sessionStorage.removeItem('redirectUrl'); // Clear it after use\n        navigate(redirectUrl, { replace: true });\n      } else {\n        // User is already logged in, redirect to appropriate dashboard\n        // Make sure we use a valid role (admin, teacher, student, parent)\n        const validRoles = ['admin', 'teacher', 'student', 'parent'];\n        let role = currentUser.role?.toLowerCase() || '';\n        \n        // If role is not valid, default to admin\n        if (!validRoles.includes(role)) {\n          console.log(`Invalid role detected: ${role}, defaulting to admin`);\n          role = 'admin';\n        }\n        \n        const dashboardPath = `/${role}/dashboard`;\n        console.log('User already logged in, redirecting to', dashboardPath);\n        navigate(dashboardPath, { replace: true });\n      }\n    }\n  }, [currentUser, navigate]);\n  const [loading, setLoading] = useState(false);\n\n  const handleSubmit = async (values, { setSubmitting }) => {\n    try {\n      setLoading(true);\n      setError('');\n      setErrorType('general');\n      \n      // Clear any existing auth data before login\n      localStorage.removeItem('token');\n      localStorage.removeItem('user');\n      \n      // Attempt login\n      const user = await login(values.username, values.password);\n      \n      // Get the redirect URL if it exists\n      const redirectUrl = sessionStorage.getItem('redirectUrl');\n      console.log('Redirect URL after login:', redirectUrl);\n      \n      // Short delay to ensure localStorage is updated before navigation\n      setTimeout(() => {\n        // Get role and convert to lowercase for consistency\n        const role = (user.role || '').toLowerCase();\n        console.log('User authenticated with role:', role);\n        \n        // Navigate based on saved redirect URL or role\n        if (redirectUrl) {\n          console.log('Redirecting to previously attempted URL:', redirectUrl);\n          sessionStorage.removeItem('redirectUrl'); // Clear it after use\n          navigate(redirectUrl, { replace: true });\n        } else if (role === 'admin') {\n          navigate('/admin/dashboard', { replace: true });\n        } else if (role === 'teacher') {\n          navigate('/teacher/dashboard', { replace: true });\n        } else if (role === 'student') {\n          navigate('/student/dashboard', { replace: true });\n        } else if (role === 'parent') {\n          navigate('/parent/dashboard', { replace: true });\n        } else {\n          // Default to admin dashboard if role is not recognized\n          console.log('Unrecognized role, defaulting to admin dashboard');\n          navigate('/admin/dashboard', { replace: true });\n        }\n      }, 100); // Small delay to ensure localStorage is updated\n    } catch (error) {\n      console.error('Login error:', error);\n      \n      // Detect specific error types\n      if (error.message?.includes('Too many connections') || \n          error.response?.data?.message?.includes('Too many connections')) {\n        setErrorType('tooManyConnections');\n      } else if (error.message?.includes('expired') || \n                error.response?.status === 401) {\n        setErrorType('authError');\n      } else {\n        setErrorType('general');\n      }\n      \n      setError(error);\n    } finally {\n      setLoading(false);\n      setSubmitting(false);\n    }\n  };\n  \n  const handleRetry = () => {\n    // Clear errors and allow user to try again\n    setError('');\n    setErrorType('general');\n  };\n\n  return (\n    <>\n      {loading && <FullPageLoader />}\n      <div className=\"min-h-screen flex items-center justify-center bg-gray-100 py-12 px-4 sm:px-6 lg:px-8\">\n        <div className=\"max-w-md w-full space-y-8 bg-white p-8 rounded-lg shadow-md\">\n        <div className=\"flex justify-center\">\n          <img \n            src={SPILogo} \n            alt=\"SPI Logo\" \n            className=\"h-24 w-auto mb-4\"\n          />\n        </div>\n        <div>\n          <h2 className=\"mt-2 text-center text-3xl font-extrabold text-gray-900\">\n            Sign in to your account\n          </h2>\n          <p className=\"mt-2 text-center text-sm text-gray-600\">\n            Student Management System\n          </p>\n        </div>\n        \n        {error && (\n          <DatabaseErrorHandler\n            error={error}\n            errorType={errorType}\n            onRetry={handleRetry}\n          />\n        )}\n        \n        <Formik\n          initialValues={{ username: '', password: '' }}\n          validationSchema={LoginSchema}\n          onSubmit={handleSubmit}\n        >\n          {({ isSubmitting }) => (\n            <Form className=\"mt-8 space-y-6\">\n              <div className=\"rounded-md shadow-sm -space-y-px\">\n                <div>\n                  <label htmlFor=\"username\" className=\"sr-only\">\n                    Username\n                  </label>\n                  <Field\n                    id=\"username\"\n                    name=\"username\"\n                    type=\"text\"\n                    autoComplete=\"username\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Username (your name)\"\n                  />\n                  <ErrorMessage\n                    name=\"username\"\n                    component=\"div\"\n                    className=\"text-red-500 text-xs mt-1\"\n                  />\n                </div>\n                <div>\n                  <label htmlFor=\"password\" className=\"sr-only\">\n                    Password\n                  </label>\n                  <Field\n                    id=\"password\"\n                    name=\"password\"\n                    type=\"password\"\n                    autoComplete=\"current-password\"\n                    className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                    placeholder=\"Password\"\n                  />\n                  <ErrorMessage\n                    name=\"password\"\n                    component=\"div\"\n                    className=\"text-red-500 text-xs mt-1\"\n                  />\n                </div>\n              </div>\n\n              <div className=\"flex items-center justify-between\">\n                <div className=\"text-sm\">\n                  <Link\n                    to=\"/forgot-password\"\n                    className=\"font-medium text-blue-600 hover:text-blue-500\"\n                  >\n                    Forgot your password?\n                  </Link>\n                </div>\n              </div>\n\n              <div>\n                <button\n                  type=\"submit\"\n                  disabled={isSubmitting || loading}\n                  className=\"group relative w-full flex justify-center py-2 px-4 border border-transparent text-sm font-medium rounded-md text-white bg-blue-600 hover:bg-blue-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-blue-500 disabled:bg-blue-300\"\n                >\n                  {loading ? (\n                    <LoadingSpinner size=\"sm\" color=\"white\" />\n                  ) : (\n                    'Sign in'\n                  )}\n                </button>\n              </div>\n            </Form>\n          )}\n        </Formik>\n        </div>\n      </div>\n    </>\n  );\n};\n\nexport default Login;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}