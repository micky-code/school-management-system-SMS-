{"ast":null,"code":"import api from './api';\nconst MAJOR_URL = '/majors';\nconst MajorService = {\n  getAll: async (page = 1, limit = 10, search = '', departmentId = '') => {\n    let url = `${MAJOR_URL}?page=${page}&limit=${limit}&search=${search}`;\n    if (departmentId) {\n      url += `&departmentId=${departmentId}`;\n    }\n    try {\n      // Try authenticated endpoint first\n      const response = await api.get(url);\n\n      // Handle different response formats (Node.js vs FastAPI)\n      if (response.data && response.data.data) {\n        // Backend returns 'data' property (like Academic Years)\n        return {\n          rows: response.data.data || [],\n          count: response.data.count || 0,\n          pagination: response.data.pagination\n        };\n      } else if (response.data && Array.isArray(response.data.rows)) {\n        // Backend returns 'rows' property\n        return response.data;\n      } else if (Array.isArray(response.data)) {\n        // Simple array format\n        return {\n          rows: response.data,\n          count: response.data.length\n        };\n      }\n      // Default empty response\n      return {\n        rows: [],\n        count: 0\n      };\n    } catch (error) {\n      var _error$response, _error$response2;\n      console.error('Error fetching majors from authenticated endpoint:', error);\n\n      // If authentication fails (401) or other error, try public endpoint as fallback\n      if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401 || ((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 403) {\n        console.log('Authentication failed, trying public endpoint...');\n        try {\n          return await MajorService.getAllOpen(page, limit, search);\n        } catch (fallbackError) {\n          console.error('Public endpoint also failed:', fallbackError);\n          return {\n            rows: [],\n            count: 0\n          };\n        }\n      }\n      return {\n        rows: [],\n        count: 0\n      };\n    }\n  },\n  getById: async id => {\n    const response = await api.get(`${MAJOR_URL}/${id}`);\n    return response.data;\n  },\n  create: async majorData => {\n    const response = await api.post(MAJOR_URL, majorData);\n    return response.data;\n  },\n  update: async (id, majorData) => {\n    try {\n      const response = await api.put(`${MAJOR_URL}/${id}`, majorData);\n      return response.data;\n    } catch (error) {\n      var _error$response3, _error$response4;\n      // Handle authentication errors gracefully\n      if (error.isAuthError || ((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : _error$response3.status) === 401) {\n        console.log('Authentication required for update operation');\n        throw new Error('Authentication required. Please log in again.');\n      }\n      // Handle permission errors\n      if (error.isPermissionError || ((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : _error$response4.status) === 403) {\n        throw new Error('You do not have permission to update majors.');\n      }\n      // Re-throw other errors\n      throw error;\n    }\n  },\n  delete: async id => {\n    try {\n      const response = await api.delete(`${MAJOR_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      var _error$response5, _error$response6, _error$response7;\n      // Handle authentication errors gracefully\n      if (error.isAuthError || ((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : _error$response5.status) === 401) {\n        console.log('Authentication required for delete operation');\n        throw new Error('Authentication required. Please log in again.');\n      }\n      // Handle permission errors\n      if (error.isPermissionError || ((_error$response6 = error.response) === null || _error$response6 === void 0 ? void 0 : _error$response6.status) === 403) {\n        throw new Error('You do not have permission to delete majors.');\n      }\n      // Handle dependency errors (400 status usually means dependencies exist)\n      if (((_error$response7 = error.response) === null || _error$response7 === void 0 ? void 0 : _error$response7.status) === 400) {\n        var _error$response$data;\n        const message = ((_error$response$data = error.response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Cannot delete major due to existing dependencies.';\n        throw new Error(message);\n      }\n      // Re-throw other errors\n      throw error;\n    }\n  },\n  getByDepartment: async departmentId => {\n    const response = await api.get(`${MAJOR_URL}/department/${departmentId}`);\n    return response.data;\n  },\n  getAllOpen: async (page = 1, limit = 10, search = '') => {\n    let url = `/public/majors?page=${page}&limit=${limit}&search=${search}`;\n    try {\n      const response = await api.get(url);\n      // Handle different response formats (Node.js vs FastAPI)\n      if (response.data && response.data.data) {\n        // FastAPI format with data property\n        return {\n          rows: response.data.data || [],\n          count: response.data.total || 0\n        };\n      } else if (response.data && Array.isArray(response.data.rows)) {\n        // Node.js format with rows property\n        return response.data;\n      } else if (Array.isArray(response.data)) {\n        // Simple array format\n        return {\n          rows: response.data,\n          count: response.data.length\n        };\n      }\n      // Default empty response\n      return {\n        rows: [],\n        count: 0\n      };\n    } catch (error) {\n      console.error('Error fetching majors from open endpoint:', error);\n      return {\n        rows: [],\n        count: 0\n      };\n    }\n  }\n};\nexport default MajorService;","map":{"version":3,"names":["api","MAJOR_URL","MajorService","getAll","page","limit","search","departmentId","url","response","get","data","rows","count","pagination","Array","isArray","length","error","_error$response","_error$response2","console","status","log","getAllOpen","fallbackError","getById","id","create","majorData","post","update","put","_error$response3","_error$response4","isAuthError","Error","isPermissionError","delete","_error$response5","_error$response6","_error$response7","_error$response$data","message","getByDepartment","total"],"sources":["C:/xampp/htdocs/sms-frontend-clone/src/services/major.service.js"],"sourcesContent":["import api from './api';\n\nconst MAJOR_URL = '/majors';\n\nconst MajorService = {\n  getAll: async (page = 1, limit = 10, search = '', departmentId = '') => {\n    let url = `${MAJOR_URL}?page=${page}&limit=${limit}&search=${search}`;\n    if (departmentId) {\n      url += `&departmentId=${departmentId}`;\n    }\n    \n    try {\n      // Try authenticated endpoint first\n      const response = await api.get(url);\n      \n      // Handle different response formats (Node.js vs FastAPI)\n      if (response.data && response.data.data) {\n        // Backend returns 'data' property (like Academic Years)\n        return {\n          rows: response.data.data || [],\n          count: response.data.count || 0,\n          pagination: response.data.pagination\n        };\n      } else if (response.data && Array.isArray(response.data.rows)) {\n        // Backend returns 'rows' property\n        return response.data;\n      } else if (Array.isArray(response.data)) {\n        // Simple array format\n        return {\n          rows: response.data,\n          count: response.data.length\n        };\n      }\n      // Default empty response\n      return { rows: [], count: 0 };\n    } catch (error) {\n      console.error('Error fetching majors from authenticated endpoint:', error);\n      \n      // If authentication fails (401) or other error, try public endpoint as fallback\n      if (error.response?.status === 401 || error.response?.status === 403) {\n        console.log('Authentication failed, trying public endpoint...');\n        try {\n          return await MajorService.getAllOpen(page, limit, search);\n        } catch (fallbackError) {\n          console.error('Public endpoint also failed:', fallbackError);\n          return { rows: [], count: 0 };\n        }\n      }\n      \n      return { rows: [], count: 0 };\n    }\n  },\n\n  getById: async (id) => {\n    const response = await api.get(`${MAJOR_URL}/${id}`);\n    return response.data;\n  },\n\n  create: async (majorData) => {\n    const response = await api.post(MAJOR_URL, majorData);\n    return response.data;\n  },\n\n  update: async (id, majorData) => {\n    try {\n      const response = await api.put(`${MAJOR_URL}/${id}`, majorData);\n      return response.data;\n    } catch (error) {\n      // Handle authentication errors gracefully\n      if (error.isAuthError || error.response?.status === 401) {\n        console.log('Authentication required for update operation');\n        throw new Error('Authentication required. Please log in again.');\n      }\n      // Handle permission errors\n      if (error.isPermissionError || error.response?.status === 403) {\n        throw new Error('You do not have permission to update majors.');\n      }\n      // Re-throw other errors\n      throw error;\n    }\n  },\n\n  delete: async (id) => {\n    try {\n      const response = await api.delete(`${MAJOR_URL}/${id}`);\n      return response.data;\n    } catch (error) {\n      // Handle authentication errors gracefully\n      if (error.isAuthError || error.response?.status === 401) {\n        console.log('Authentication required for delete operation');\n        throw new Error('Authentication required. Please log in again.');\n      }\n      // Handle permission errors\n      if (error.isPermissionError || error.response?.status === 403) {\n        throw new Error('You do not have permission to delete majors.');\n      }\n      // Handle dependency errors (400 status usually means dependencies exist)\n      if (error.response?.status === 400) {\n        const message = error.response.data?.message || 'Cannot delete major due to existing dependencies.';\n        throw new Error(message);\n      }\n      // Re-throw other errors\n      throw error;\n    }\n  },\n\n  getByDepartment: async (departmentId) => {\n    const response = await api.get(`${MAJOR_URL}/department/${departmentId}`);\n    return response.data;\n  },\n\n  getAllOpen: async (page = 1, limit = 10, search = '') => {\n    let url = `/public/majors?page=${page}&limit=${limit}&search=${search}`;\n    try {\n      const response = await api.get(url);\n      // Handle different response formats (Node.js vs FastAPI)\n      if (response.data && response.data.data) {\n        // FastAPI format with data property\n        return {\n          rows: response.data.data || [],\n          count: response.data.total || 0\n        };\n      } else if (response.data && Array.isArray(response.data.rows)) {\n        // Node.js format with rows property\n        return response.data;\n      } else if (Array.isArray(response.data)) {\n        // Simple array format\n        return {\n          rows: response.data,\n          count: response.data.length\n        };\n      }\n      // Default empty response\n      return { rows: [], count: 0 };\n    } catch (error) {\n      console.error('Error fetching majors from open endpoint:', error);\n      return { rows: [], count: 0 };\n    }\n  }\n};\n\nexport default MajorService;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}